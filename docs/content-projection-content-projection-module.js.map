{"version":3,"sources":["./src/app/components/ultimate-course-index/angular-pro/content-projection/auth-form/auth-form.module.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/content-projection.component.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/content-projection.component.html","./src/app/components/ultimate-course-index/angular-pro/content-projection/encapsulation/emulated-encapsulation.component.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/auth-remember/auth-remember.component.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/auth-remember/auth-remember.component.html","./src/app/components/ultimate-course-index/angular-pro/content-projection/content-projection.module.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/content-projection-routing.module.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/auth-message/auth-message.component.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/auth-message/auth-message.component.html","./src/app/components/ultimate-course-index/angular-pro/content-projection/auth-form/auth-form.component.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/auth-form/auth-form.component.html","./src/app/components/ultimate-course-index/angular-pro/content-projection/change-detection/on-push.component.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/auth-message/auth-message.module.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/change-detection/default.component.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/encapsulation/shadow-dom-encapsulation.component.ts","./src/app/components/ultimate-course-index/angular-pro/content-projection/encapsulation/no-encapsulation.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACW;AACQ;AACM;;AAOjE,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAHhB,CAAC,4DAAY,EAAE,mFAAiB,EAAE,0DAAW,EAAE,kEAAmB,CAAC;mIAGjE,cAAc,mBAJV,sEAAiB,aACtB,4DAAY,EAAE,mFAAiB,EAAE,0DAAW,EAAE,kEAAmB,aACjE,sEAAiB;6FAEhB,cAAc;cAL1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,sEAAiB,CAAC;gBACjC,OAAO,EAAE,CAAC,4DAAY,EAAE,mFAAiB,EAAE,0DAAW,EAAE,kEAAmB,CAAC;gBAC5E,OAAO,EAAE,CAAC,sEAAiB,CAAC;aAC7B;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWuB;AAC6C;;;;;;;;;;;;;;;IC+B9D,sEAAU;IAAA,oEAAG;IAAA,uDAAQ;IAAA,4DAAI;IAAC,6EAAiB;IAAA,oEAAG;IAAA,uDAAY;IAAA,4DAAI;;;;IAAjD,0DAAQ;IAAR,wEAAQ;IAAyB,0DAAY;IAAZ,4EAAY;;;IAG1D,2EAAe;IAAA,oEAAG;IAAA,uDAAQ;IAAA,4DAAI;IAAC,6EAAiB;IAAA,oEAAG;IAAA,uDAAQ;IAAA,4DAAI;;;;IAA7C,0DAAQ;IAAR,wEAAQ;IAAyB,0DAAQ;IAAR,wEAAQ;;;AD3B1D,MAAM,0BAA0B;IAQrC,YACmB,QAAkC,EAClC,EAAqB,EAC9B,IAAsB;QAFb,aAAQ,GAAR,QAAQ,CAA0B;QAClC,OAAE,GAAF,EAAE,CAAmB;QAC9B,SAAI,GAAJ,IAAI,CAAkB;QAPhC,0BAAqB,GAAW,CAAC,CAAC;QA0ElC,4BAA4B;QAC5B,SAAI,GAAQ;YACV,IAAI,EAAE,QAAQ;YACd,GAAG,EAAE,EAAE;YACP,QAAQ,EAAE,QAAQ;SACnB,CAAC;IAvEC,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEnB,eAAe;QACb,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE;YAC3C,SAAS,EAAE,UAAU;YACrB,QAAQ,EAAE,8BAA8B;SACzC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IAED,UAAU,CAAC,EAAO;QAChB,OAAO,CAAC,GAAG,CACT,eAAe,EACf,0CAA0C,EAC1C,EAAE,CACH,CAAC;IACJ,CAAC;IACD,SAAS,CAAC,EAAO;QACf,OAAO,CAAC,GAAG,CACT,cAAc,EACd,0CAA0C,EAC1C,EAAE,EACF,WAAW,EACX,IAAI,CAAC,UAAU,CAChB,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,EAAO;QAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,0CAA0C,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,sBAAsB;QACpB,MAAM,eAAe,GACnB,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,gFAAiB,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CACzC,eAAe,EACf,IAAI,CAAC,qBAAqB,CAC3B,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,GAAG,4CAA4C,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACtH,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC5D,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IAED,oBAAoB;QAClB,MAAM,eAAe,GACnB,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,gFAAiB,CAAC,CAAC;QAC3D,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CACjD,eAAe,EACf,IAAI,CAAC,qBAAqB,CAC3B,CAAC;QACF,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,gBAAgB,CAAC,QAAQ,CAAC,kBAAkB;YAC1C,iDAAiD,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,GAAG,iCAAiC,KAAK,EAAE,CAAC;QACtF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IASD,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC;IACpC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;IAClC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,GAAG;YACV,IAAI,EAAE,+BAA+B;YACrC,GAAG,EAAE,EAAE;YACP,QAAQ,EAAE,SAAS;SACpB,CAAC;IACJ,CAAC;;oGAnGU,0BAA0B;0GAA1B,0BAA0B;6EACT,8DAAgB;6EAIZ,8DAAgB;6EAErB,yDAAW;;;;;;;QC1BxC,oEAAG;QAAA,oFAAyB;QAAA,4DAAI;QAChC,yEACE;QAAA,yEACE;QAAA,mFACE;QADa,uKAAa,sBAAkB,IAAC;QAC7C,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,4EAGE;QAAA,oEACF;QAAA,4DAAS;QACX,4DAAgB;QAClB,4DAAM;QACN,yEACE;QAAA,oFACE;QADa,wKAAa,qBAAiB,IAAC;QAC5C,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,6EAGA;QAAA,mEACA;QAAA,4DAAS;QACT,wFAAqE;QAAjC,wKAAW,wBAAoB,IAAC;QAAC,4DAAoB;QAC3F,4DAAgB;QAClB,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,8HAAkE;QAAA,4DAAK;QAC3E,sEAAI;QAAA,yFAA6B;QAAA,4DAAK;QACtC,wEAAiH;QAAA,mEAAO;QAAA,4DAAI;QAAA,iEAC5H;QAAA,6EACE;QADM,mJAAS,aAAS,IAAC;QACzB,uFACF;QAAA,4DAAS;QACT,6EACE;QADM,mJAAS,4BAAwB,IAAC;QACxC,sFACF;QAAA,4DAAS;QACT,6EACE;QADM,mJAAS,0BAAsB,IAAC;QACtC,yGACF;QAAA,4DAAS;QACT,4EAAkB;QACpB,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,kHAAsD;QAAA,4DAAK;QAC/D,sEAAI;QAAA,gHAAoD;QAAA,4DAAK;QAC7D,4EAAsB;QACtB,qNAEc;QACd,qNAEc;QACd,sEAAI;QAAA,0GAA4C;QAAA,4DAAK;QACrD,wEAGe;QACjB,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAC1B,yEAAuF;QAAA,mEAAO;QAAA,4DAAI;QAClG,mFAA6C;QAC7C,yFAAyD;QACzD,2FAA6D;QAC/D,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,uEACE;QAAA,8EAA4B;QAApB,mJAAS,aAAS,IAAC;QAAC,wEAAY;QAAA,4DAAS;QACjD,8EAA+B;QAAvB,mJAAS,gBAAY,IAAC;QAAC,uEAAW;QAAA,4DAAS;QACnD,8EAA+B;QAAvB,mJAAS,gBAAY,IAAC;QAAC,uEAAW;QAAA,4DAAS;QACnD,0EACE;QAAA,0EACE;QAAA,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,uFAA2D;QAC7D,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAC1B,wFAA6D;QAC/D,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;QA7BA,2DAA+B;QAA/B,iFAA+B;QAoBL,2DAAa;QAAb,0EAAa;QAIZ,0DAAa;QAAb,0EAAa;;6FDvDjC,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;2QAEiD,KAAK;kBAApD,uDAAS;mBAAC,OAAO,EAAE,EAAE,IAAI,EAAE,8DAAgB,EAAE;YAK9C,SAAS;kBADR,uDAAS;mBAAC,WAAW,EAAE,EAAE,IAAI,EAAE,8DAAgB,EAAE;YAER,IAAI;kBAA7C,uDAAS;mBAAC,MAAM,EAAE,EAAE,IAAI,EAAE,yDAAW,EAAE;;;;;;;;;;;;;;AE1B1C;AAAA;AAAA;AAAA;AAA6D;;;AAYtD,MAAM,8BAA8B;;4GAA9B,8BAA8B;8GAA9B,8BAA8B;QAPvC,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,yEAA8B;QAAA,iFAAsB;QAAA,4DAAM;QAC1D,kFAA6C;;6FAKpC,8BAA8B;cAV1C,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,QAAQ,EAAE;;;;GAIT;gBACD,MAAM,EAAE,CAAC,yCAAyC,CAAC;gBACnD,aAAa,EAAE,+DAAiB,CAAC,QAAQ;aAC1C;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAwE;;AAOjE,MAAM,qBAAqB;IAEhC;QADU,YAAO,GAA0B,IAAI,0DAAY,EAAW,CAAC;IACxD,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,SAAS,CAAC,KAAU;QAClB,OAAO,CAAC,GAAG,CACT,YAAY,EACZ,0CAA0C,EAC1C,KAAK,CACN,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;;0FAbU,qBAAqB;qGAArB,qBAAqB;QCPlC,oEAAG;QAAA,+EAAoB;QAAA,4DAAI;QAC3B,wEACE;QAAA,2EAEA;QADE,oJAAU,4BAAwB,IAAC;QADrC,4DAEA;QAAA,+EACF;QAAA,4DAAQ;;6FDEK,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;sCAEW,OAAO;kBAAhB,oDAAM;;;;;;;;;;;;;;AERT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEsC;AACT;AACd;AACH;AACqB;AACqB;AACH;AACZ;AACC;AACP;;AAmBzE,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBAPzB;YACP,4DAAY;YACZ,wEAAe;YACf,0EAAc;YACd,iGAA8B;SAC/B;mIAEU,uBAAuB,mBAfhC,wFAA0B;QAC1B,4FAAqB;QACrB,iHAA+B;QAC/B,8GAA8B;QAC9B,kGAAwB;QACxB,oGAA+B;QAC/B,6FAAwB,aAGxB,4DAAY;QACZ,wEAAe;QACf,0EAAc;QACd,iGAA8B;6FAGrB,uBAAuB;cAjBnC,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,wFAA0B;oBAC1B,4FAAqB;oBACrB,iHAA+B;oBAC/B,8GAA8B;oBAC9B,kGAAwB;oBACxB,oGAA+B;oBAC/B,6FAAwB;iBACzB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,wEAAe;oBACf,0EAAc;oBACd,iGAA8B;iBAC/B;aACF;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACqB;;;AAE5E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wFAA0B;KACtC;CACF,CAAC;AAMK,MAAM,8BAA8B;;6GAA9B,8BAA8B;sLAA9B,8BAA8B,kBAHhC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,8BAA8B,uFAF/B,4DAAY;6FAEX,8BAA8B;cAJ1C,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,oBAAoB;IAE/B,gBAAe,CAAC;IAEhB,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAED,OAAO,CAAC,aAAqB;QAC3B,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;IAC5B,CAAC;;wFAVU,oBAAoB;oGAApB,oBAAoB;QCPjC,sEACE;QAAA,uDACF;QAAA,4DAAM;;QADJ,0DACF;QADE,oHACF;;6FDKa,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYuB;AACuD;AACG;;;;;;;ICC7E,4EAGE;IAAA,0GACF;IAAA,4DAAS;;;;ADEN,MAAM,iBAAiB;IAY5B,YACmB,EAAqB,EACrB,QAAmB;QADnB,OAAE,GAAF,EAAE,CAAmB;QACrB,aAAQ,GAAR,QAAQ,CAAW;QAX5B,cAAS,GACjB,IAAI,0DAAY,EAA+B,CAAC;IAW/C,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEnB,eAAe;QACb,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAClC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;SACzB;QACD,oEAAoE;QACpE,IAAI,CAAC,QAAQ,CAAC,YAAY,CACxB,IAAI,CAAC,UAAU,CAAC,aAAa,EAC7B,aAAa,EACb,0BAA0B,CAC3B,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,CAAC,UAAU,CAAC,aAAa,EAC7B,cAAc,EACd,MAAM,CACP,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;QACvE,gDAAgD;QAChD,mBAAmB;QACnB,+BAA+B;QAC/B,KAAK;QACL,4DAA4D;QAC5D,yCAAyC;IAC3C,CAAC;IAED,kBAAkB;;QAChB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,UAAI,CAAC,iBAAiB,0CAAE,OAAO,CAAC,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;gBAC7D,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;YAC7B,CAAC,EAAE;SACJ;IACH,CAAC;IAED,QAAQ,CAAC,EAAO;QACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CACT,aAAa,EACb,kDAAkD,EAClD,EAAE,CACH,CAAC;IACJ,CAAC;;kFA3DU,iBAAiB;iGAAjB,iBAAiB;+EAMd,4FAAqB;;;;;kEACxB,yFAAoB;;;;;;;;;QC5BjC,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;QACvB,sEACE;QAAA,6EACE;QADI,yRAAY,uBAAoB,IAAC;QACrC,6DAAqC;QACrC,qEAAI;QAAA,uDAAwB;QAAA,4DAAK;QACjC,wEACE;QAAA,0EAAc;QAAA,iEACd;QAAA,0EACF;QAAA,4DAAQ;QAAA,iEACR;QAAA,yEACE;QAAA,sEAAS;QAAA,iEACT;QAAA,uEAA8D;QAAA,iEAChE;QAAA,4DAAQ;QAAA,iEACR;QAAA,iEAA4C;QAC5C,iEAAyC;QACzC,qHAIS;QACT,+EAEmB;QACrB,4DAAO;QACT,4DAAM;;QApBE,0DAAwB;QAAxB,uFAAwB;QAab,2DAAwB;QAAxB,wFAAwB;QAIvC,0DAAoD;QAApD,0GAAoD;;6FDA3C,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;kLAIW,SAAS;kBAAlB,oDAAM;YAG8B,iBAAiB;kBAArD,0DAAY;mBAAC,4FAAqB;YACF,gBAAgB;kBAAhD,uDAAS;mBAAC,yFAAoB;YACX,UAAU;kBAA7B,uDAAS;mBAAC,OAAO;;;;;;;;;;;;;;AE7BpB;AAAA;AAAA;AAA0E;;AAiBnE,MAAM,wBAAwB;IAGnC,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,yBAAyB,CAAC;IAC7C,CAAC;;gGALU,wBAAwB;wGAAxB,wBAAwB;QAXjC,yEACE;QAAA,qEAAI;QAAA,uDAAe;QAAA,4DAAK;QACxB,qEAAI;QAAA,uDAAwB;QAAA,4DAAK;QACjC,uDAAoB;QAAA,gEACpB;QAAA,uDACA;QAAA,4EAA2B;QAAnB,gJAAS,YAAQ,IAAC;QAAC,0EAAe;QAAA,4DAAS;QACnD,qEAAG;QAAA,+EAAmB;QAAA,4DAAI;QAC5B,4DAAM;;QANA,0DAAe;QAAf,8EAAe;QACf,0DAAwB;QAAxB,gGAAwB;QAC5B,0DAAoB;QAApB,6FAAoB;QACpB,0DACA;QADA,0FACA;;6FAMO,wBAAwB;cAfpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,eAAe,EAAE,qEAAuB,CAAC,MAAM;gBAC/C,QAAQ,EAAE;;;;;;;;;GAST;gBACD,MAAM,EAAE,CAAC,qDAAqD,CAAC;aAChE;gBAEU,IAAI;kBAAZ,mDAAK;;;;;;;;;;;;;;AClBR;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACiB;;AAOzD,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC;mIAGZ,iBAAiB,mBAJb,4EAAoB,aACzB,4DAAY,aACZ,4EAAoB;6FAEnB,iBAAiB;cAL7B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,4EAAoB,CAAC;gBACpC,OAAO,EAAE,CAAC,4DAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,4EAAoB,CAAC;aAChC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAA0E;;AAiBnE,MAAM,+BAA+B;IAG1C,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,0BAA0B,CAAC;IAC9C,CAAC;;8GALU,+BAA+B;+GAA/B,+BAA+B;QAXxC,yEACE;QAAA,qEAAI;QAAA,uDAAe;QAAA,4DAAK;QACxB,qEAAI;QAAA,uDAAwB;QAAA,4DAAK;QACjC,uDAAoB;QAAA,gEACpB;QAAA,uDACA;QAAA,4EAA2B;QAAnB,uJAAS,YAAQ,IAAC;QAAC,0EAAe;QAAA,4DAAS;QACnD,qEAAG;QAAA,2EAAe;QAAA,4DAAI;QACxB,4DAAM;;QANA,0DAAe;QAAf,8EAAe;QACf,0DAAwB;QAAxB,gGAAwB;QAC5B,0DAAoB;QAApB,6FAAoB;QACpB,0DACA;QADA,0FACA;;6FAMO,+BAA+B;cAf3C,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,eAAe,EAAE,qEAAuB,CAAC,OAAO;gBAChD,QAAQ,EAAE;;;;;;;;;GAST;gBACD,MAAM,EAAE,CAAC,qDAAqD,CAAC;aAChE;gBAEU,IAAI;kBAAZ,mDAAK;;;;;;;;;;;;;;AClBR;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;AAatD,MAAM,+BAA+B;;8GAA/B,+BAA+B;+GAA/B,+BAA+B;QARxC,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,yEAA4B;QAAA,mFAAwB;QAAA,4DAAM;QAC1D,wFAAyD;QACzD,kFAA6C;;6FAKpC,+BAA+B;cAX3C,uDAAS;eAAC;gBACT,QAAQ,EAAE,8BAA8B;gBACxC,QAAQ,EAAE;;;;;GAKT;gBACD,MAAM,EAAE,CAAC,sCAAsC,CAAC;gBAChD,aAAa,EAAE,+DAAiB,CAAC,SAAS;aAC3C;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAA6D;;AAWtD,MAAM,wBAAwB;;gGAAxB,wBAAwB;wGAAxB,wBAAwB;QANjC,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QACb,yEAA0B;QAAA,2EAAgB;QAAA,4DAAM;;6FAKvC,wBAAwB;cATpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE;;;GAGT;gBACD,MAAM,EAAE,CAAC,mCAAmC,CAAC;gBAC7C,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACtC","file":"content-projection-content-projection-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AuthFormComponent } from \"./auth-form.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AuthMessageModule } from \"../auth-message/auth-message.module\";\n\n@NgModule({\n  declarations: [AuthFormComponent],\n  imports: [CommonModule, AuthMessageModule, FormsModule, ReactiveFormsModule],\n  exports: [AuthFormComponent],\n})\nexport class AuthFormModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { AuthFormComponent } from \"./auth-form/auth-form.component\";\n\n@Component({\n  selector: \"app-content-projection\",\n  templateUrl: \"./content-projection.component.html\",\n  styleUrls: [\"./content-projection.component.css\"],\n})\nexport class ContentProjectionComponent implements OnInit, AfterViewInit {\n  @ViewChild(\"entry\", { read: ViewContainerRef }) entry: ViewContainerRef;\n  rememberme: boolean;\n  component: ComponentRef<AuthFormComponent>;\n  countDynamicComponent: number = 0;\n  @ViewChild(\"tmplentry\", { read: ViewContainerRef })\n  tmplEntry: ViewContainerRef;\n  @ViewChild(\"tmpl\", { read: TemplateRef }) tmpl: TemplateRef<any>;\n  constructor(\n    private readonly resolver: ComponentFactoryResolver,\n    private readonly cd: ChangeDetectorRef,\n    private vref: ViewContainerRef\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.createDynamicComponent();\n    this.tmplEntry.createEmbeddedView(this.tmpl, {\n      $implicit: \"template\",\n      location: \"content-projection.component\",\n    });\n    this.cd.detectChanges();\n  }\n\n  createUser(ev: any): void {\n    console.log(\n      \"%ccreateUser \",\n      \"color: white; background-color: #007acc;\",\n      ev\n    );\n  }\n  loginUser(ev: any): void {\n    console.log(\n      \"%cloginUser \",\n      \"color: white; background-color: #007acc;\",\n      ev,\n      \"remember \",\n      this.rememberme\n    );\n  }\n\n  onRememberme(ev: any): void {\n    this.rememberme = ev;\n    console.log(\"%cremenber \", \"color: red; display: block; width: 100%;\", ev);\n  }\n\n  createDynamicComponent(): void {\n    const authFormFactory =\n      this.resolver.resolveComponentFactory(AuthFormComponent);\n    this.component = this.entry.createComponent(\n      authFormFactory,\n      this.countDynamicComponent\n    );\n    this.component.instance.messageFromFactory = `Message create from the factory number = ${this.countDynamicComponent}`;\n    this.component.instance.submitted.subscribe(this.createUser);\n    this.countDynamicComponent = this.countDynamicComponent + 1;\n    this.cd.detectChanges();\n  }\n\n  moveDynamicComponent(): void {\n    const authFormFactory =\n      this.resolver.resolveComponentFactory(AuthFormComponent);\n    const anotherComponent = this.entry.createComponent(\n      authFormFactory,\n      this.countDynamicComponent\n    );\n    const index = 0;\n    anotherComponent.instance.messageFromFactory =\n      \"ANOTHER DYNAMIC COMPONENT AND IT GONNA BE MOVED\";\n    this.component.instance.messageFromFactory = `It has been moved to position ${index}`;\n    this.entry.move(this.component.hostView, index);\n  }\n\n  destroy(): void {\n    this.component.destroy();\n  }\n\n  //?CHANGE DETECTION STRATEGY\n  user: any = {\n    name: \"Markus\",\n    age: 44,\n    location: \"Picaña\",\n  };\n\n  addProp() {\n    this.user.email = \"bla@email.com\";\n  }\n\n  changeName() {\n    this.user.name = \"another name\";\n  }\n\n  changeUser() {\n    this.user = {\n      name: \"another name from change user\",\n      age: 99,\n      location: \"Torrent\",\n    };\n  }\n}\n","<p>content-projection works!</p>\n<div class=\"row\">\n  <div class=\"col-6\">\n    <app-auth-form (submitted)=\"createUser($event)\">\n      <h3>Create Account</h3>\n      <button\n         type=\"submit\"\n         mat-raised-button color=\"accent\">\n        Join us\n      </button>\n    </app-auth-form>\n  </div>\n  <div class=\"col-6\">\n    <app-auth-form (submitted)=\"loginUser($event)\">\n      <h3>Login</h3>\n      <button\n        type=\"submit\"\n        mat-raised-button color=\"primary\">\n      Login\n      </button>\n      <app-auth-remember class=\"remember\" (checked)=\"onRememberme($event)\"></app-auth-remember>\n    </app-auth-form>\n  </div>\n  <div class=\"col-6\">\n    <h3>Creating a Dynamic components with ComponentFactory and reordering</h3>\n    <h4>Using resolveComponentFactory</h4>\n    <a href=\"https://stackblitz.com/edit/angular-dynamically-creating-components-vh5gpb?file=app%2Fapp.component.ts\">Ejemplo</a><br>\n    <button (click)=\"destroy()\" mat-flat-button color=\"accent\">\n      Destroy dynamic component\n    </button>\n    <button (click)=\"createDynamicComponent()\" mat-flat-button color=\"warn\">\n      Create dynamic component\n    </button>\n    <button (click)=\"moveDynamicComponent()\" mat-flat-button color=\"primary\">\n      Create a new one and Move dynamic component\n    </button>\n    <div #entry></div>\n  </div>\n  <div class=\"col-6\">\n    <h3>Using TemplateRef to generate templates passing params</h3>\n    <h4>Using ng-template and assign the template to the div</h4>\n    <div #tmplentry></div>\n    <ng-template #tmpl let-name let-location=\"location\">\n      This is a <b>{{name}}</b> generated in the <b>{{location}}</b>\n    </ng-template>\n    <ng-template #tmplOutlet let-info let-data=\"data\">\n      TemplateOutlet <b>{{info}}</b> generated in the <b>{{data}}</b>\n    </ng-template>\n    <h4>Using ng-container [ngTemplateOutlet]=\"tmpl\"</h4>\n    <ng-container\n      [ngTemplateOutlet]=\"tmplOutlet\"\n      [ngTemplateOutletContext]=\"{$implicit: 'NUEVA INFO', data: 'DESDE TEMPLEATE OUTLET CONTEXT'}\">\n    </ng-container>\n  </div>\n  <div class=\"col-6\">\n    <h3>ViewEncapsulation</h3>\n    <a href=\"https://rootstack.com/es/blog/angular-que-se-refieren-con-view-encapsulation\">Ejemplo</a>\n    <app-no-encapsulation></app-no-encapsulation>\n    <app-emulated-encapsulation></app-emulated-encapsulation>\n    <app-shadow-dom-encapsulation></app-shadow-dom-encapsulation>\n  </div>\n  <div class=\"col-6\">\n    <h3>Change Detection</h3>\n    <div>\n      <button (click)=\"addProp()\">add property</button>\n      <button (click)=\"changeUser()\">change user</button>\n      <button (click)=\"changeName()\">change name</button>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <h4>OnPush detection</h4>\n          <app-onpush-detection [user]=\"user\"></app-onpush-detection>\n        </div>\n        <div class=\"col-6\">\n          <h4>Default detection</h4>\n          <app-default-detection [user]=\"user\"></app-default-detection>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-emulated-encapsulation\",\r\n  template: `\r\n    <h2>Emulated</h2>\r\n    <div class=\"emulated-message\">Emulated encapsulation</div>\r\n    <app-no-encapsulation></app-no-encapsulation>\r\n  `,\r\n  styles: [\"h2, .emulated-message { color: green; }\"],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class EmulatedEncapsulationComponent {}\r\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\n@Component({\n  selector: \"app-auth-remember\",\n  templateUrl: \"./auth-remember.component.html\",\n  styleUrls: [\"./auth-remember.component.css\"],\n})\nexport class AuthRememberComponent implements OnInit {\n  @Output() checked: EventEmitter<boolean> = new EventEmitter<boolean>();\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onChecked(value: any): void {\n    console.log(\n      \"%cchecked \",\n      \"color: white; background-color: #007acc;\",\n      value\n    );\n    this.checked.emit(value.checked);\n  }\n}\n","<p>auth-remember works!</p>\n<label>\n  <input type=\"checkbox\" name=\"check\" id=\"check\"\n    (change)=\"onChecked($event.target)\">\n  Keep me logged in\n</label>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ContentProjectionRoutingModule } from \"./content-projection-routing.module\";\nimport { ContentProjectionComponent } from \"./content-projection.component\";\nimport { AuthFormModule } from \"./auth-form/auth-form.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { AuthRememberComponent } from \"./auth-remember/auth-remember.component\";\nimport { ShadowDomEncapsulationComponent } from \"./encapsulation/shadow-dom-encapsulation.component\";\nimport { EmulatedEncapsulationComponent } from \"./encapsulation/emulated-encapsulation.component\";\nimport { NoEncapsulationComponent } from \"./encapsulation/no-encapsulation.component\";\nimport { DefaultChangeDetectionComponent } from \"./change-detection/default.component\";\nimport { OnPushDetectionComponent } from \"./change-detection/on-push.component\";\n\n@NgModule({\n  declarations: [\n    ContentProjectionComponent,\n    AuthRememberComponent,\n    ShadowDomEncapsulationComponent,\n    EmulatedEncapsulationComponent,\n    NoEncapsulationComponent,\n    DefaultChangeDetectionComponent,\n    OnPushDetectionComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    AuthFormModule,\n    ContentProjectionRoutingModule,\n  ],\n})\nexport class ContentProjectionModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ContentProjectionComponent } from \"./content-projection.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ContentProjectionComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContentProjectionRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-auth-message\",\n  templateUrl: \"./auth-message.component.html\",\n  styleUrls: [\"./auth-message.component.css\"],\n})\nexport class AuthMessageComponent implements OnInit {\n  public days: number;\n  constructor() {}\n\n  ngOnInit(): void {\n    this.setDays(7);\n  }\n\n  setDays(numbersOfDays: number): void {\n    this.days = numbersOfDays;\n  }\n}\n","<div>\n  You will be logged in for {{ days }} days\n</div>\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n} from \"@angular/core\";\nimport { AuthMessageComponent } from \"../auth-message/auth-message.component\";\nimport { AuthRememberComponent } from \"../auth-remember/auth-remember.component\";\n\n@Component({\n  selector: \"app-auth-form\",\n  templateUrl: \"./auth-form.component.html\",\n  styleUrls: [\"./auth-form.component.css\"],\n})\nexport class AuthFormComponent\n  implements OnInit, AfterContentInit, AfterViewInit\n{\n  @Output() submitted: EventEmitter<{ email: \"\"; passwrod: \"\" }> =\n    new EventEmitter<{ email: \"\"; passwrod: \"\" }>();\n\n  @ContentChild(AuthRememberComponent) rememberComponent: AuthRememberComponent;\n  @ViewChild(AuthMessageComponent) messageComponent: AuthMessageComponent;\n  @ViewChild(\"email\") emailField: ElementRef<HTMLInputElement>;\n\n  showMessage: boolean;\n  messageFromFactory: string;\n  constructor(\n    private readonly cd: ChangeDetectorRef,\n    private readonly renderer: Renderer2\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    if (this.messageComponent) {\n      this.messageComponent.setDays(30);\n      this.cd.detectChanges();\n    }\n    //? RENDERER2 sirve para cualquier plataforma Android, Apple, etc...\n    this.renderer.setAttribute(\n      this.emailField.nativeElement,\n      \"placeholder\",\n      \"Enter your email address\"\n    );\n    this.renderer.setStyle(\n      this.emailField.nativeElement,\n      \"border-color\",\n      \"blue\"\n    );\n    this.renderer.selectRootElement(this.emailField.nativeElement).focus();\n    // this.emailField?.nativeElement?.setAttribute(\n    //   \"placeholder\",\n    //   \"Enter your email address\"\n    // );\n    // this.emailField.nativeElement.style.borderColor = \"blue\";\n    // this.emailField.nativeElement.focus();\n  }\n\n  ngAfterContentInit(): void {\n    if (this.rememberComponent) {\n      this.rememberComponent?.checked.subscribe((checked: boolean) => {\n        this.showMessage = checked;\n      });\n    }\n  }\n\n  onSubmit(ev: any): void {\n    this.submitted.emit(ev);\n    console.log(\n      \"%conSubmit \",\n      \"background: green; color: white; display: block;\",\n      ev\n    );\n  }\n}\n","<p>auth-form works!</p>\n<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\"  #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <h4>{{ messageFromFactory }}</h4>\n    <label>\n      Email address <br>\n      <input type=\"email\" name=\"email\" id=\"email\" ngModel #email>\n    </label><br>\n    <label>\n      Password <br>\n      <input type=\"password\" name=\"password\" id=\"password\" ngModel> <br>\n    </label><br>\n    <ng-content select=\".remember\"></ng-content>\n    <ng-content select=\"button\"></ng-content>\n    <button\n    mat-flat-button color=\"accent\"\n    type=\"submit\" *ngIf=\"messageFromFactory\">\n      solo visible para el componente dinámcio\n    </button>\n    <app-auth-message\n    [style.display]=\"(showMessage) ? 'inherit' : 'none'\">\n    </app-auth-message>\n  </form>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-onpush-detection\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"example-one\">\r\n      <h4>{{ user.name }}</h4>\r\n      <h5>{{ user.age }} years old</h5>\r\n      {{ user.location }} <br />\r\n      {{ user.email }}\r\n      <button (click)=\"update()\">Internal update</button>\r\n      <p>* Should not update</p>\r\n    </div>\r\n  `,\r\n  styles: [\".example-one {font-size: 19px, margin-botton: 10px}\"],\r\n})\r\nexport class OnPushDetectionComponent {\r\n  @Input() user: any;\r\n\r\n  update(): void {\r\n    this.user.name = \"change detection ONPUSH\";\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AuthMessageComponent } from \"./auth-message.component\";\n\n@NgModule({\n  declarations: [AuthMessageComponent],\n  imports: [CommonModule],\n  exports: [AuthMessageComponent],\n})\nexport class AuthMessageModule {}\n","import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-default-detection\",\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  template: `\r\n    <div class=\"example-two\">\r\n      <h4>{{ user.name }}</h4>\r\n      <h5>{{ user.age }} years old</h5>\r\n      {{ user.location }} <br />\r\n      {{ user.email }}\r\n      <button (click)=\"update()\">Internal update</button>\r\n      <p>* Should update</p>\r\n    </div>\r\n  `,\r\n  styles: [\".example-two {font-size: 19px, margin-botton: 10px}\"],\r\n})\r\nexport class DefaultChangeDetectionComponent {\r\n  @Input() user: any;\r\n\r\n  update(): void {\r\n    this.user.name = \"change detection DEFAULT\";\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-shadow-dom-encapsulation\",\r\n  template: `\r\n    <h2>ShadowDom</h2>\r\n    <div class=\"shadow-message\">Shadow DOM encapsulation</div>\r\n    <app-emulated-encapsulation></app-emulated-encapsulation>\r\n    <app-no-encapsulation></app-no-encapsulation>\r\n  `,\r\n  styles: [\"h2, .shadow-message { color: blue; }\"],\r\n  encapsulation: ViewEncapsulation.ShadowDom,\r\n})\r\nexport class ShadowDomEncapsulationComponent {}\r\n","import { Component, ViewEncapsulation } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-no-encapsulation\",\r\n  template: `\r\n    <h2>None</h2>\r\n    <div class=\"none-message\">No encapsulation</div>\r\n  `,\r\n  styles: [\"h2, .none-message { color: red; }\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class NoEncapsulationComponent {}\r\n"],"sourceRoot":"webpack:///"}