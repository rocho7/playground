{"version":3,"sources":["./src/app/components/dependency-injection/menu/resolution-modifiers/resolution-modifiers.component.ts","./src/app/components/dependency-injection/menu/resolution-modifiers/resolution-modifiers.component.html","./src/app/components/dependency-injection/menu/resolution-modifiers/resolution-modifiers.module.ts","./src/app/components/dependency-injection/menu/resolution-modifiers/resolution-modifiers-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAkD;;AAO3C,MAAM,4BAA4B;IAEvC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wGALU,4BAA4B;4GAA5B,4BAA4B;QCPzC,qEAAI;QAAA,gFAAqB;QAAA,4DAAK;QAC9B,uEAAsD;QAAA,qGAA0C;QAAA,4DAAI;QACpG,uEAAoF;QAAA,uFAA4B;QAAA,4DAAI;QAEpH,qEACE;QAAA,qEACE;QAAA,wEAAY;QAAA,gEACZ;QAAA,oIAAuE;QAAA,iEACvE;QAAA,qEAAG;QAAA,+KAAmH;QAAA,4DAAI;QAC5H,4DAAK;QACL,sEAAI;QAAA,oEAAQ;QAAA,iEACZ;QAAA,gIAAmE;QAAA,iEACnE;QAAA,qEAAG;QAAA,oJAAwF;QAAA,4DAAI;QAC/F,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QACnB,uEACC;QAAA,+LAIE;QAAA,qEAAI;QAAA,uFAA0B;QAAA,4DAAI;QACpC,oEACD;QAAA,4DAAM;QACL,4DAAK;QACL,sEAAI;QAAA,uEAAW;QAAA,iEACb;QAAA,oIAAuE;QAAA,iEACvE;QAAA,qEAAG;QAAA,4IAAgF;QAAA,4DAAI;QACzF,4DAAK;QACL,sEAAI;QAAA,oEAAQ;QAAA,iEACV;QAAA,qEAAG;QAAA,oFAAwB;QAAA,4DAAI;QACjC,4DAAK;QACP,4DAAK;;6FDvBQ,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,WAAW,EAAE,uCAAuC;gBACpD,SAAS,EAAE,CAAC,sCAAsC,CAAC;aACpD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAE0C;AACT;;AAUzE,MAAM,yBAAyB;;wGAAzB,yBAAyB;4KAAzB,yBAAyB,kBAL3B;YACP,4DAAY;YACZ,qGAAgC;SACjC;mIAEU,yBAAyB,mBANrB,4FAA4B,aAEzC,4DAAY;QACZ,qGAAgC;6FAGvB,yBAAyB;cAPrC,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,4FAA4B,CAAC;gBAC5C,OAAO,EAAE;oBACP,4DAAY;oBACZ,qGAAgC;iBACjC;aACF;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACyB;;;AAEhF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4FAA4B;KACxC;CACF,CAAC;AAMK,MAAM,gCAAgC;;+GAAhC,gCAAgC;0LAAhC,gCAAgC,kBAHlC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,gCAAgC,uFAFjC,4DAAY;6FAEX,gCAAgC;cAJ5C,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB","file":"resolution-modifiers-resolution-modifiers-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resolution-modifiers',\n  templateUrl: './resolution-modifiers.component.html',\n  styleUrls: ['./resolution-modifiers.component.css']\n})\nexport class ResolutionModifiersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>resolution-modifiers!</h3>\n<a href=\"https://www.youtube.com/watch?v=uVGnsmm9g-I\">Video Decoded Fronted Resolution modifiers</a>\n<a href=\"https://runebook.dev/es/docs/angular/guide/dependency-injection-in-action\">Ejemplo Resolution modifiers</a>\n\n<ul>\n  <li>\n    @Optional() <br>\n    constructor(@Optional() private readonly loggerService: LoggerService) <br>\n    <b>Esto se utiliza para prevenir que el servicio no haya sido encontrado en los componentes padres y produzca un error</b>\n  </li>\n  <li>@Self() <br>\n  constructor(@Self() private readonly loggerService: LoggerService) <br>\n  <b>Solo busca el servicio donde se ha implementado, no buscandolo en los componentes padres</b>\n  <h4>Solucion:</h4>\n <pre>\n  @Component(\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.css'],\n    <b> providers: [LoggerService]</b>\n  )\n </pre>\n  </li>\n  <li>@SkipSelf()<br>\n    constructor(@SkipSelf() private readonly loggerService: LoggerService) <br>\n    <b>Salta el servicio donde se ha implementado, buscandolo en los componentes padres</b>\n  </li>\n  <li>@Host() <br>\n    <b>Se utiliza en directivas</b>\n  </li>\n</ul>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResolutionModifiersRoutingModule } from './resolution-modifiers-routing.module';\nimport { ResolutionModifiersComponent } from './resolution-modifiers.component';\n\n\n@NgModule({\n  declarations: [ResolutionModifiersComponent],\n  imports: [\n    CommonModule,\n    ResolutionModifiersRoutingModule\n  ]\n})\nexport class ResolutionModifiersModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResolutionModifiersComponent } from './resolution-modifiers.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResolutionModifiersComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ResolutionModifiersRoutingModule { }\n"],"sourceRoot":"webpack:///"}