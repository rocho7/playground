{"version":3,"sources":["./src/app/core/dialog-confirmation/dialog-confirmation.component.ts","./src/app/core/dialog-confirmation/dialog-confirmation.component.html","./src/app/category/category-list/category-list.component.ts","./src/app/category/category-list/category-list.component.html","./src/app/services/swagger-apis/products.services/configuration.ts","./src/app/components/componente-prueba/componente-prueba.component.ts","./src/app/components/componente-prueba/componente-prueba.component.html","./src/app/components/classes-course/classes-course.component.ts","./src/app/components/classes-course/classes-course.component.html","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/app/core/spinner/spinner/spinner.component.ts","./src/app/core/spinner/spinner/spinner.component.html","./src/app/category/category.service.ts","./src/app/components/classes-course/class/abstractClass.component.ts","./src/app/category/category.module.ts","./src/environments/environment.ts","./src/app/components/my-config-service/my-config.service.ts","./src/app/services/swagger-apis/products.services/variables.ts","./src/app/components/classes-course/classes-course.module.ts","./src/app/components/command-cli/route/route.component.ts","./src/app/components/command-cli/route/route.component.html","./src/app/components/classes-course/classes-course-routing.module.ts","./src/app/components/creando-decoradors/creando-decoradors-routing.module.ts","./src/app/components/componente-prueba2/componente-prueba2.component.ts","./src/app/components/componente-prueba2/componente-prueba2.component.html","./src/app/components/classes-course/parentClass/Parent.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/view-child/hijo/hijo.component.ts","./src/app/view-child/hijo/hijo.component.html","./src/app/services/swagger-apis/products.services/api.module.ts","./src/app/core/interceptors/spinner-interceptor.interceptor.ts","./src/app/core/spinner/service/spinner.service.ts","./src/app/view-child/view-child.component.ts","./src/app/view-child/view-child.component.html","./src/app/app.module.ts","./src/app/components/classes-course/abstract-class/abstract-class.component.ts","./src/app/components/classes-course/abstract-class/abstract-class.component.html","./src/app/services/swagger-apis/products.services/api/productsRest.service.ts","./src/app/category/model/category.model.ts","./src/app/category/category-edit/category-edit.component.ts","./src/app/category/category-edit/category-edit.component.html","./src/app/components/creando-decoradors/decorators/decorators.ts","./src/app/components/classes-course/abstract-class/abstract-class.module.ts","./src/app/components/classes-course/parentClass/AbsParent.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/token.ts","./src/app/app.routing.module.ts","./src/app/core/core.module.ts","./src/app/components/creando-decoradors/creando-decoradors.module.ts","./src/app/components/classes-course/class/prescripcion-compra.class.ts","./src/app/components/creando-decoradors/creando-decoradors.component.ts","./src/app/components/creando-decoradors/creando-decoradors.component.html","./src/app/components/my-config-service/my-config-service.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-confirmation',\n  templateUrl: './dialog-confirmation.component.html',\n  styleUrls: ['./dialog-confirmation.component.scss']\n})\nexport class DialogConfirmationComponent implements OnInit {\n\n  title : string;\n  description : string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogConfirmationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this.title = this.data.title;\n    this.description = this.data.description;\n  }\n\n  onYes() {\n    this.dialogRef.close(true);\n  }\n\n  onNo() {\n    this.dialogRef.close(false);\n  }\n\n}\n","<div class=\"container\">\n  <h1>{{title}}</h1>\n  <div [innerHTML]=\"description\" class=\"description\"></div>\n\n  <div class=\"buttons\">\n      <button mat-stroked-button (click)=\"onNo()\">No</button>\n      <button mat-flat-button color=\"primary\" (click)=\"onYes()\">Sí</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CategoryService } from '../category.service';\nimport { Category } from '../model/category.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CategoryEditComponent } from '../category-edit/category-edit.component';\nimport { DialogConfirmationComponent } from 'src/app/core/dialog-confirmation/dialog-confirmation.component';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.scss']\n})\nexport class CategoryListComponent implements OnInit {\n\n  dataSource = new MatTableDataSource<Category>();\n  displayedColumns: string[] = ['id', 'name', 'action'];\n\n  constructor(private readonly categoryService: CategoryService,\n    public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.categoryService.getCategories().subscribe( res => {\n      console.log('%cres ', 'color: white; background-color: #007acc;', res);\n      this.dataSource.data = res;\n    } );\n  }\n\n  createCategory() {\n    const dialogRef = this.dialog.open(CategoryEditComponent, {\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe( () => this.ngOnInit());\n  }\n\n  editCategory( category: Category ) {\n    const dialogRef = this.dialog.open(CategoryEditComponent, {\n      data: { category: category }\n    });\n    dialogRef.afterClosed().subscribe(()=> this.ngOnInit())\n  }\n\n\n  deleteCategory(category: Category) {\n    const dialogRef = this.dialog.open(DialogConfirmationComponent, {\n      data: { title: \"Eliminar categoría\", description: \"Atención si borra la categoría se perderán sus datos.<br> ¿Desea eliminar la categoría?\" }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.categoryService.deleteCategory(category.id).subscribe(result => {\n          this.ngOnInit();\n        });\n      }\n    });\n  }\n}\n","<div class=\"container\">\n  <h1>Listado de Categorías</h1>\n\n  <mat-table [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"id\">\n          <mat-header-cell *matHeaderCellDef> Identificador </mat-header-cell>\n          <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"name\">\n          <mat-header-cell *matHeaderCellDef> Nombre categoría  </mat-header-cell>\n          <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"action\">\n          <mat-header-cell *matHeaderCellDef></mat-header-cell>\n          <mat-cell *matCellDef=\"let element\">\n              <button mat-icon-button color=\"primary\">\n                <mat-icon (click)=\"editCategory(element)\">edit</mat-icon>\n              </button>\n              <button mat-icon-button color=\"accent\">\n                <mat-icon (click)=\"deleteCategory(element)\">clear</mat-icon>\n              </button>\n          </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n  <ng-container *ngIf=\"!dataSource?.data?.length\">\n    <h2>No hay datos</h2>\n  </ng-container>\n\n  <div class=\"buttons\">\n      <button mat-flat-button color=\"primary\" (click)=\"createCategory()\">Nueva categoría</button>\n  </div>\n</div>\n\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-componente-prueba',\n  templateUrl: './componente-prueba.component.html',\n  styleUrls: ['./componente-prueba.component.css']\n})\nexport class ComponentePruebaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>componente-prueba works!</p>\n","import { isNgTemplate } from \"@angular/compiler\";\nimport { Component, Inject, Injector, OnInit } from \"@angular/core\";\nimport {\n  Agrupacion,\n  GrupoCompra,\n  PrescipcionCompra,\n  Item,\n} from \"./class/prescripcion-compra.class\";\nimport { Parent } from \"./parentClass/Parent\";\n\ninterface Hero {\n  name: string;\n  realName: string;\n  dangerLevel: number;\n}\ninterface Villain {\n  name: string;\n  dangerLevel: number;\n}\n\n@Component({\n  selector: \"app-classes-course\",\n  templateUrl: \"./classes-course.component.html\",\n  styleUrls: [\"./classes-course.component.css\"],\n})\nexport class ClassesCourseComponent extends Parent implements OnInit {\n  prescripcion = [\n    {\n      fecServicio: \"2021-08-09\",\n      grupoCompra: [\n        {\n          codGrupoCompra: 1056,\n          desGrupoCompra: \"Ribarroja Ingeniería\",\n          codEstadoPrescripcion: \"AJ\",\n          agrupacion: [\n            {\n              codAgrupacion: 12,\n              desAgrupacion: \"Pescado\",\n              item: [\n                {\n                  codItem: 123,\n                  desItem: \"Pescado pequeño\",\n                  mcaHay: \"S\",\n                  pvp: \"33.5\",\n                  ordenAgrupacion: 0,\n                  codEstadoProductoPrescripcion: \"AJ\",\n                  numTiendas: 100,\n                },\n                {\n                  codItem: 123,\n                  desItem: \"Pescado mediano\",\n                  mcaHay: \"S\",\n                  pvp: \"55.5\",\n                  ordenAgrupacion: 1,\n                  codEstadoProductoPrescripcion: \"AJ\",\n                  numTiendas: 80,\n                },\n              ],\n            },\n          ],\n        },\n        {\n          codGrupoCompra: 1042,\n          desGrupoCompra: \"Abrera Ingeniería\",\n          codEstadoPrescripcion: \"AJ\",\n          agrupacion: [\n            {\n              codAgrupacion: 1,\n              desAgrupacion: \"Pescado\",\n              item: [\n                {\n                  codItem: 123,\n                  desItem: \"Pescado pequeño\",\n                  mcaHay: \"S\",\n                  pvp: \"33.5\",\n                  ordenAgrupacion: 0,\n                  codEstadoProductoPrescripcion: \"AJ\",\n                  numTiendas: 100,\n                },\n              ],\n            },\n            {\n              codAgrupacion: 2,\n              desAgrupacion: \"Pescado de rio\",\n              item: [\n                {\n                  codItem: 123,\n                  desItem: \"Salmón\",\n                  mcaHay: \"S\",\n                  pvp: \"33.5\",\n                  ordenAgrupacion: 0,\n                  codEstadoProductoPrescripcion: \"AJ\",\n                  numTiendas: 100,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  instancePrescipcionCompra: any;\n  items = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\", \"Item 5\"];\n  expandedIndex = 0;\n  constructor(\n    public injector: Injector // @Inject(String)\n  ) // public name: string,\n  // @Inject(Number)\n  // public age: number\n  {\n    super(\n      injector\n      // name,\n      // lastName,\n      // age\n    );\n  }\n\n  ngOnInit(): void {\n    super.name = \"Angel\";\n    super.lastName = \"León\";\n    super.age = 42;\n    super.getFullName();\n    this.onHandleAbsParent();\n    this.deleteRow(\"hola\");\n    this.onHandleAbsParent();\n\n    this.instanceJson();\n    this.instancePrescipcionCompra = new PrescipcionCompra();\n  }\n\n  metodoPropidoDeEsteComponente(): void {}\n\n  instanceJson(): void {\n    // let pc:PrescipcionCompra[];\n    this.prescripcion.forEach((pres, index) => {\n      this.instancePrescipcionCompra = Object.assign(\n        new PrescipcionCompra(),\n        pres\n      );\n      this.instancePrescipcionCompra.grupoCompra = pres.grupoCompra;\n    });\n\n    console.log(\n      \"%cPC2 \",\n      \"color: white; background-color: #007acc;\",\n      this.instancePrescipcionCompra\n    );\n    console.log(\n      \"%cgeneric function with a date\",\n      \"color: white; background-color: #007acc;\",\n      this.genericFunction(new Date()).getTime()\n    );\n    console.log(\n      \"%cgeneric function with a string\",\n      \"color: white; background-color: #007acc;\",\n      this.genericFunction(\"string\").toLocaleUpperCase()\n    );\n    console.log(\n      \"%cgeneric function with a number\",\n      \"color: white; background-color: #007acc;\",\n      this.genericFunction(3.141618).toFixed(2)\n    );\n\n    const deadpool = {\n      name: \"Deadpool\",\n      realName: \"Wade Winston Wilson\",\n      dangerLevel: 130,\n    };\n    console.log(\n      \"%cpasando un tipo a la función genérica \",\n      \"background: green; color: white; display: block;\",\n      this.genericFunction<Hero>(deadpool).realName\n    );\n  }\n\n  genericFunction<T>(argument: T): T {\n    return argument;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-6\">\n    <p>classes-course works!</p>\n    <h1>Access modifiers</h1>\n    <h6>método private es SOLO accesible desde la clase.</h6>\n    <h6>\n      método protected es accesible desde las clases que herendan(HIJAS), no\n      desde sus instancias.\n    </h6>\n    <h5>Ejemplo</h5>\n    <p>Creamos una clase Person con la propiedad name</p>\n    <p>protected name: string</p>\n    <p>\n      y la extendemos en Admin, instanciamos Admin y llamar a la propiedad name\n      dará error porque es protected\n    </p>\n    <p>class Admin extends Person</p>\n    <p>let admin = new Admin()</p>\n    <p>admin.name ---> ERRROR ES PROTECTED</p>\n    <h5>Shorthand para modifiers</h5>\n    <p>\n      No hace falta crear propiedades en las clases, ya que es redundante,\n      bastará con asignar los access modifiers en el constructor\n    </p>\n    <p>constructor(protected name: string, public age: number)</p>\n    <h1>ABSTRACT CLASS</h1>\n    <app-abstract-class></app-abstract-class>\n  </div>\n\n  <div class=\"col-6\">\n    <h2>GENERICS</h2>\n    <p>T significa un tipo genérico</p>\n    <p>\n      T[] permite cualquir tipo de array, es decir, array de numbers, strings,\n      objectos...\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Arrancar la aplicación back tutorial-angular-springboot</h1>\n<mat-toolbar>\n  <mat-toolbar-row>\n      <div class=\"header_container\">\n          <div class=\"header_title\">\n              <mat-icon>storefront</mat-icon> Ludoteca Tan\n          </div>\n\n          <div class=\"header_separator\"> | </div>\n\n          <div class=\"header_menu\">\n              <div class=\"header_button\">\n                  <a routerLink=\"/games\" routerLinkActive=\"active\">Catálogo</a>\n              </div>\n              <div class=\"header_button\">\n                  <a routerLink=\"/categories\" routerLinkActive=\"active\">Categorías</a>\n              </div>\n              <div class=\"header_button\">\n                  <a routerLink=\"/authors\" routerLinkActive=\"active\">Autores</a>\n              </div>\n          </div>\n\n          <div class=\"header_login\">\n              <mat-icon>account_circle</mat-icon> Sign in\n          </div>\n      </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n","import { Component, OnInit } from '@angular/core';\nimport { SpinnerService } from '../service/spinner.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  isLoading$: any;\n\n  constructor(\n    private readonly spinnerService: SpinnerService\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.spinnerService.isLoading$;\n  }\n\n}\n","<!--  -->\n<div *ngIf=\"isLoading$ | async\" class=\"container-spinner\">\n  <div  class=\"spinner-border text-info overlay\" role=\"status\">\n    <span class=\"visually-hidden\">Loading...</span>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { Category } from './model/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n\nCATEGORY_DATA: Category[] = [\n    { id: 1, name: 'Dados' },\n    { id: 2, name: 'Fichas' },\n    { id: 3, name: 'Cartas' },\n    { id: 4, name: 'Rol' },\n    { id: 5, name: 'Tableros' },\n    { id: 6, name: 'Temáticos' },\n    { id: 7, name: 'Europeos' },\n    { id: 8, name: 'Guerra' },\n    { id: 9, name: 'Abstractos' },\n];\n\n  domain: string;\n  entity: string;\n  url: string;\n\n\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.domain = 'http://localhost:8080/';\n    this.entity = 'category';\n    this.url = `${this.domain}${this.entity}`;\n  }\n\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.url);\n  }\n\n  saveCategory(category: Category): Observable<Category> {\n    const urlPut = category?.id ? `${this.url}/${category?.id}` : this.url;\n    return this.http.put<Category>(urlPut, category);\n  }\n\n  deleteCategory( idCategory: number): Observable<any> {\n    return this.http.delete(`${this.url}/${idCategory}`);\n  }\n\n}\n","import { Directive, OnInit } from '@angular/core';\r\n\r\n@Directive()\r\nexport abstract class BasePrueba implements OnInit {\r\n\r\n  protected variable1: string\r\n  protected variable2: string;\r\n  protected obj: any;\r\n\r\n  constructor(\r\n     variable1: string,\r\n     variable2: string,\r\n     obj: any,\r\n  ) {\r\n    this.variable1 = variable1;\r\n    this.variable2 = variable2;\r\n    this.obj = obj;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getVariable('variable from abstract class');\r\n  }\r\n\r\n  protected abstract getVariable(param: string): void;\r\n\r\n  get variableInfo(): string {\r\n    return `yeee ${this.variable2}`;\r\n    // return `${this.variable1}`;\r\n  }\r\n\r\n  showObject(): void {\r\n    console.log('%cshowObject ', 'background: green; color: white; display: block;', this.obj);\r\n    console.log('%cshowObject ', 'background: green; color: white; display: block;', this.obj.sayHello());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { CategoryEditComponent } from './category-edit/category-edit.component';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [CategoryListComponent, CategoryEditComponent],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    {\n      provide: MAT_DIALOG_DATA,\n      useValue: {}\n    }\n  ]\n})\nexport class CategoryModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  hmr: true,\n  API_BASE_PATH: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable, Inject, InjectionToken } from '@angular/core';\n\n\nexport const APP_NAME = new InjectionToken<string>('APP_NAME');\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyConfigService {\n\n  constructor(\n    @Inject(APP_NAME) public appName: string\n  ) { }\n\n  getAppName() {\n    return this.appName;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClassesCourseRoutingModule } from './classes-course-routing.module';\nimport { Parent } from './parentClass/Parent';\nimport { AbstractClassComponent } from './abstract-class/abstract-class.component';\nimport { AbstractClassModule } from './abstract-class/abstract-class.module';\nimport { ClassesCourseComponent } from './classes-course.component';\n\n@NgModule({\n  declarations: [ClassesCourseComponent],\n  imports: [\n    CommonModule,\n    AbstractClassModule,\n    ClassesCourseRoutingModule,\n  ],\n  // exports: [ClassesCourseComponent]\n})\nexport class ClassesCourseModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-route',\n  templateUrl: './route.component.html',\n  styleUrls: ['./route.component.css']\n})\nexport class RouteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>route works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClassesCourseComponent } from './classes-course.component';\n\nconst routes: Routes = [ {\n  path: '',\n  component: ClassesCourseComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClassesCourseRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CreandoDecoradorsComponent } from \"./creando-decoradors.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: CreandoDecoradorsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CreandoDecoradorsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-componente-prueba2',\n  templateUrl: './componente-prueba2.component.html',\n  styleUrls: ['./componente-prueba2.component.css']\n})\nexport class ComponentePrueba2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>componente-prueba2 works!</p>\n","import { Injector } from '@angular/core';\r\nimport { AbsParent } from './AbsParent';\r\n\r\nexport abstract class Parent extends AbsParent {\r\n\r\n    public name: string;\r\n    public lastName: string;\r\n    public age: number;\r\n  // public injector: Injector;\r\n\r\n  constructor(\r\n    injector: Injector,\r\n\r\n  ) {\r\n    super(injector);\r\n\r\n  }\r\n\r\n  getFullName() {\r\n    console.log(`Hi! my name is ${this.name} - ${this.lastName} and I'm ${this.age} years old.`);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MyConfigService } from \"./components/my-config-service/my-config.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  title = \"rxjs\";\n  public appName: string = \"\";\n\n  constructor(private myConfigService: MyConfigService, private route: Router) {\n    this.appName = this.myConfigService.getAppName();\n    console.log(\n      \"%cEjemplo de injection Token \",\n      \"color: red; display: block; width: 100%;\",\n      this.appName\n    );\n  }\n\n  goTo(navigateTo: string): void {\n    if (navigateTo === \"playground\") {\n      this.route.navigate([\"playground\"]);\n    } else {\n      this.route.navigate([\"ultimate\"]);\n    }\n  }\n}\n","\r\n\r\n\r\n<!-- SPINNER  -->\r\n<app-spinner></app-spinner>\r\n\r\n\r\n<!-- <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse dark\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/']\">Home<span >(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"resolver-guard\">resolver-guard</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"observables\">Observables</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"operador-pluck\">operador-pluck</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"ejercicio-rxjs\">Ejercicios RXJS</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"decorator\">creando decorator</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"strategy-pattern\">Strategy pattern</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"classes-course\">Classes Extends</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"view-child\">view-child</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"utility-types\">Utility types de TypeScrpit</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"form-endpoint\">Swagger prueba</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"value-control-accessor\">Example value control accessor</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"wiget-wrapper\">Design pattern widget</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"dependency-injection\">Dependency injection</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"composition\">Composition</a>\r\n      </li>\r\n      <li class=\"nav-item drop-down\">\r\n        <a class=\"nav-link\" routerLink=\"testing-jasmine\">Testing Jasmine</a>\r\n      </li>\r\n      <li class=\"nav-item drop-down\">\r\n        <a class=\"nav-link\" routerLink=\"directive-lifecycle\">Directives - lifecycle</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n<h1>Welcome to testing!</h1>\r\n<h3>PRUEBA CON FORROOT. NOMBRE ES: {{ appName }}</h3> -->\r\n\r\n<button (click)=\"goTo('playground')\">Playground</button>\r\n<button (click)=\"goTo('ultimate')\">Ultimate course</button>\r\n<router-outlet></router-outlet>\r\n\r\n<!-- <app-pruebas-testing></app-pruebas-testing> -->\r\n\r\n<!-- <app-view-child></app-view-child> -->\r\n\r\n<!-- <h2>lifecycle hooks</h2>\r\n<div>\r\n  <div>\r\n    <button (click)=\"subtract()\">subtract</button>\r\n    <app-child [myNewNumber]=\"myNumber\" [myName]=\"name\" [myUser]=\"user.name\">\r\n      <h3 #contentParagraph>Esto se debería ver con un ng-content en el componente hijo</h3>\r\n    </app-child>\r\n    <button (click)=\"addition()\">addition</button>\r\n    <br>\r\n    <a (click)=\"updateUser()\">updateUser</a>\r\n  </div>\r\n</div> -->\r\n","import { Component, Input, OnInit, Output, EventEmitter, Host } from '@angular/core';\n// import { ViewChildComponent } from '../view-child.component';\n\n@Component({\n  selector: 'app-hijo',\n  templateUrl: './hijo.component.html',\n  styleUrls: ['./hijo.component.css']\n})\nexport class HijoComponent implements OnInit {\n\n  propiedad1: string = 'hola'\n  propiedad2: string = 'que tal'\n  @Input('dataUser') data: any\n  @Output() delete: EventEmitter<any> = new EventEmitter();\n\n  // constructor( @Host() private a: ViewChildComponent ) {\n\n  //   console.log(a)\n  // }\n\n  constructor(){}\n\n  ngOnInit(): void {\n  }\n\n  sayHello(){\n    console.log('Hello! Called from parent');\n  }\n  deleteUser( id: number ) {\n    this.delete.emit( id );\n  }\n\n}\n","<ng-content select=\"#etiqueta\"></ng-content>\n<p>{{ data.name }}\n  <button mat-raised-button color=\"primary\" (click)=\"deleteUser( data.id )\">Delete</button>\n  <dx-button\n    text=\"Click me\"\n    >\n</dx-button>\n</p>\n<ng-content select=\"#footer\"></ng-content>\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { ProductsRestService } from './api/productsRest.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    ProductsRestService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<ApiModule> {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SpinnerService } from '../spinner/service/spinner.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class SpinnerInterceptorInterceptor implements HttpInterceptor {\n\n  constructor(private readonly spinnerService: SpinnerService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.spinnerService.showLoading();\n    return next.handle(request).pipe(\n      finalize(()=> this.spinnerService.hideLoading())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n\n  isLoading$ = new Subject<boolean>();\n\n  constructor(\n  ) { }\n\n  showLoading(): void {\n    this.isLoading$.next(true);\n  }\n\n  hideLoading(): void {\n    this.isLoading$.next(false);\n  }\n\n\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HijoComponent } from './hijo/hijo.component';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, interval, of, ReplaySubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-child',\n  templateUrl: './view-child.component.html',\n  styleUrls: ['./view-child.component.css']\n})\nexport class ViewChildComponent implements OnInit {\n\n  @ViewChild( 'name', { static: true } ) nombre: ElementRef;\n  @ViewChild( HijoComponent, { static: true } ) hijo: HijoComponent;\n  $number: ReplaySubject<number> = new ReplaySubject<number>(3);\n  $behavoir: BehaviorSubject<number> = new  BehaviorSubject<number>(0);\n  $interval: any\n\n  users: any[] = [];\n  constructor( private http: HttpClient, private router: Router, private route: ActivatedRoute) { }\n\n  goTo(): void {\n    this.router.navigate( ['hijo2'], { relativeTo: this.route } );\n  }\n\n  ngOnInit(): void {\n    console.log(this.nombre);\n    console.log(this.hijo)\n    // this.hijo.sayHello()\n\n    this.http.get<any>('https://jsonplaceholder.typicode.com/users')\n    .subscribe( data => this.users = data )\n\n    this.$interval = interval(1000).pipe(\n      take( 6 )\n    )\n    this.$interval.subscribe( this.$number )\n    this.$interval.subscribe( this.$behavoir )\n\n\n      console.log(\"SUM \", this.sum( 1, 3));\n  }\n\n  deleteUserFromList( id: number) {\n    this.users = this.users.filter( user => user.id !== id );\n  }\n\n  checkReplaySubject(){\n    this.$number.subscribe( val =>console.log( \"ReplaySubject \", val ) )\n    // this.$interval.unsubscribe()\n    console.log(\"ReplaySubject getNow\", this.$number._getNow())\n\n    this.$behavoir.subscribe( val => console.log(\"BehaivourSubject \", val))\n\n    console.log('BehaviourSubject getValue ', this.$behavoir.getValue());\n  }\n\n  sum( a: number, b: number ): number {\n    return a +b;\n  }\n\n}\n","<p>view-child works!</p>\n<input type=\"number\" #name  id=\"num1\">\n<button (click)=\"checkReplaySubject()\">checkReplaySubject</button>\n<br>\n<button (click)=\"goTo()\">go to HIJO 2 relative to</button>\n<br>\n<ul >\n  <li>\n    <a routerLink=\"hijo\">Hijo<span >(ng-container)</span></a>\n  </li>\n  <li >\n    <a  routerLink=\"hijo2\">hijo2 routerLink=\"hijo2\"</a>\n  </li>\n</ul>\n\n<router-outlet></router-outlet>\ncomponent hijo utilizando ng-container\n<!-- <app-hijo *ngFor=\"let user of users\"\n          [dataUser]=\"user\"\n          (delete)=\"deleteUserFromList( $event )\">\n          <h3 id=\"etiqueta\">Esto es una etiqueta definida en elemento padre</h3>\n          <h3 id=\"footer\">otra etiqueta</h3>\n</app-hijo> -->\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\nimport { PruebasTestingComponent } from \"./pruebas-testing/pruebas-testing.component\";\nimport { ViewChildComponent } from \"./view-child/view-child.component\";\nimport { HijoComponent } from \"./view-child/hijo/hijo.component\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { DxButtonModule } from \"devextreme-angular\";\nimport { ComponentePruebaComponent } from \"./components/componente-prueba/componente-prueba.component\";\nimport { ComponentePrueba2Component } from \"./components/componente-prueba2/componente-prueba2.component\";\nimport { RouteComponent } from \"./components/command-cli/route/route.component\";\nimport { AppRoutingModule } from \"./app.routing.module\";\nimport { RouterModule } from \"@angular/router\";\nimport { MyConfigServiceModule } from \"./components/my-config-service/my-config-service.module\";\nimport { CreandoDecoradorsModule } from \"./components/creando-decoradors/creando-decoradors.module\";\nimport { ClassesCourseModule } from \"./components/classes-course/classes-course.module\";\nimport { environment } from \"../environments/environment\";\nimport { ApiModule } from \"../app/services/swagger-apis/products.services/api.module\";\nimport { BASE_PATH } from \"../app/services/swagger-apis/products.services/variables\";\n\nimport { CdkAccordionModule } from \"@angular/cdk/accordion\";\nimport { DependencyInjectionModule } from \"./components/dependency-injection/dependency-injection.module\";\nimport { CoreModule } from \"./core/core.module\";\nimport { CategoryModule } from \"./category/category.module\";\nimport { SpinnerInterceptorInterceptor } from \"./core/interceptors/spinner-interceptor.interceptor\";\nimport { PruebasTestingModule } from \"./pruebas-testing/pruebas-testing.module\";\nimport { FOOD_API_TOKEN } from \"./components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/token\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewChildComponent,\n    HijoComponent,\n    ComponentePruebaComponent,\n    ComponentePrueba2Component,\n    RouteComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatButtonModule,\n    DxButtonModule,\n    BrowserAnimationsModule,\n    CreandoDecoradorsModule,\n    ClassesCourseModule,\n    ApiModule,\n    AppRoutingModule,\n    RouterModule,\n    // childModule,\n    // DependencyInjectionModule,\n    MyConfigServiceModule.forRoot(\"***appRoot***\"),\n    CoreModule,\n    CategoryModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: SpinnerInterceptorInterceptor,\n      multi: true,\n    },\n    {\n      provide: BASE_PATH,\n      useValue: environment.API_BASE_PATH,\n    },\n    // {\n    //   provide: USER_REQUEST,\n    //   useFactory: getUser,\n    //   deps: [UserService]\n    // }\n    {\n      provide: FOOD_API_TOKEN,\n      useValue: \"/assets/ultimate-course/angular-pro/dependency-injection/\",\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { BasePrueba } from '../class/abstractClass.component';\n\n@Component({\n  selector: 'app-abstract-class',\n  templateUrl: './abstract-class.component.html',\n  styleUrls: ['./abstract-class.component.css']\n})\nexport class AbstractClassComponent extends BasePrueba implements OnInit {\n\n  variable1: string;\n  variable2: string = \"variable2 from component\";\n  obj: any = {\n    name: 'Perico',\n    city: 'NY',\n    phone: 33344,\n    sayHello: this.greetingHi\n  };\n  constructor(\n  ) {\n    super(\n      \"variable1\",\n      \"variable2\",\n      \"obj\",\n    );\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit()\n    super.showObject();\n  }\n\n  getVariable(data: string): void {\n    console.log('%cgetVariable ', 'color: red; display: block; width: 100%;', data);\n    console.log('%cvariabeInfo ', 'color: red; display: block; width: 100%;', super.variableInfo);\n  }\n\n  greetingHi(): void {\n    console.log('%cgreeting ', 'color: red; display: block; width: 100%;', );\n  }\n\n\n}\n","<p>abstract-class works!</p>\n","/**\n * Api Documentation\n * Api Documentation\n *\n * OpenAPI spec version: 1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Product } from '../model/product';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class ProductsRestService {\n\n    protected basePath = 'https://localhost:8080';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * createProduct\n     *\n     * @param product product\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createProductUsingPOST(product: Product, observe?: 'body', reportProgress?: boolean): Observable<Product>;\n    public createProductUsingPOST(product: Product, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Product>>;\n    public createProductUsingPOST(product: Product, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Product>>;\n    public createProductUsingPOST(product: Product, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (product === null || product === undefined) {\n            throw new Error('Required parameter product was null or undefined when calling createProductUsingPOST.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<Product>(`${this.basePath}/products`,\n            product,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * deleteProduct\n     *\n     * @param productId productId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteProductUsingDELETE(productId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteProductUsingDELETE(productId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteProductUsingDELETE(productId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteProductUsingDELETE(productId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (productId === null || productId === undefined) {\n            throw new Error('Required parameter productId was null or undefined when calling deleteProductUsingDELETE.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/products/${encodeURIComponent(String(productId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * getProductById3\n     *\n     * @param product product\n     * @param productId productId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getProductById3UsingPUT(product: Product, productId: number, observe?: 'body', reportProgress?: boolean): Observable<Product>;\n    public getProductById3UsingPUT(product: Product, productId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Product>>;\n    public getProductById3UsingPUT(product: Product, productId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Product>>;\n    public getProductById3UsingPUT(product: Product, productId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (product === null || product === undefined) {\n            throw new Error('Required parameter product was null or undefined when calling getProductById3UsingPUT.');\n        }\n\n        if (productId === null || productId === undefined) {\n            throw new Error('Required parameter productId was null or undefined when calling getProductById3UsingPUT.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<Product>(`${this.basePath}/products/${encodeURIComponent(String(productId))}`,\n            product,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * getProductById\n     *\n     * @param productId productId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getProductByIdUsingGET(productId: number, observe?: 'body', reportProgress?: boolean): Observable<Product>;\n    public getProductByIdUsingGET(productId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Product>>;\n    public getProductByIdUsingGET(productId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Product>>;\n    public getProductByIdUsingGET(productId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (productId === null || productId === undefined) {\n            throw new Error('Required parameter productId was null or undefined when calling getProductByIdUsingGET.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<Product>(`${this.basePath}/products/${encodeURIComponent(String(productId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * getProduct\n     *\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getProductUsingGET(observe?: 'body', reportProgress?: boolean): Observable<Array<Product>>;\n    public getProductUsingGET(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Product>>>;\n    public getProductUsingGET(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Product>>>;\n    public getProductUsingGET(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<Array<Product>>(`${this.basePath}/products`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * hello\n     *\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public helloUsingGET(observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public helloUsingGET(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public helloUsingGET(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public helloUsingGET(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<string>(`${this.basePath}/products/hello`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export class Category {\r\n  id: number;\r\n  name: string;\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CategoryService } from '../category.service';\nimport { Category } from '../model/category.model';\n\n@Component({\n  selector: 'app-category-edit',\n  templateUrl: './category-edit.component.html',\n  styleUrls: ['./category-edit.component.scss']\n})\nexport class CategoryEditComponent implements OnInit {\n\n  category: Category;\n\n  constructor(\n    public dialogRef: MatDialogRef<CategoryEditComponent>,\n    private readonly categoryService: CategoryService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    if ( this.data.category !== null ) {\n      this.category = Object.assign({}, this.data.category);\n    } else {\n      this.category = new Category();\n    }\n  }\n\n  onSave() {\n    this.categoryService.saveCategory(this.category).subscribe(() => this.dialogRef.close());\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"container\">\n\n  <h1 *ngIf=\"category.id == null\">Crear categoría</h1>\n  <h1 *ngIf=\"category.id != null\">Modificar categoría</h1>\n\n  <form>\n      <mat-form-field>\n          <mat-label>Identificador</mat-label>\n          <input type=\"number\" matInput placeholder=\"Identificador\" [(ngModel)]=\"category.id\" name=\"id\" disabled>\n      </mat-form-field>\n\n      <mat-form-field>\n          <mat-label>Nombre</mat-label>\n          <input type=\"text\" matInput placeholder=\"Nombre de categoría\" [(ngModel)]=\"category.name\" name=\"name\" required>\n          <mat-error>El nombre no puede estar vacío</mat-error>\n      </mat-form-field>\n  </form>\n\n  <div class=\"buttons\">\n      <button mat-stroked-button (click)=\"onClose()\">Cerrar</button>\n      <button mat-flat-button color=\"primary\" (click)=\"onSave()\">Guardar</button>\n  </div>\n</div>\n\n","// Property Decorator\r\nexport function Emoji() {\r\n  return function (target: any, key: string | symbol) {\r\n    let val = target[key];\r\n\r\n    const getter = () => {\r\n      return val;\r\n    };\r\n    const setter = (next: any) => {\r\n      console.log(\"updating flavor...\");\r\n      val = `🍦 ${next} 🍦`;\r\n    };\r\n\r\n    Object.defineProperty(target, key, {\r\n      get: getter,\r\n      set: setter,\r\n      enumerable: true,\r\n      configurable: true,\r\n    });\r\n  };\r\n}\r\n\r\nexport function Log(target: any, name: any, descriptor: any) {\r\n  console.log(\"target \", target);\r\n  console.log(\"name \", name);\r\n  console.log(\"descriptor \", descriptor);\r\n\r\n  const original = descriptor.value;\r\n  descriptor.value = function (...args: any) {\r\n    const result = original.apply(this, args);\r\n    if (result > new Date(new Date().setDate(new Date().getDate() + 1))) {\r\n      return \"today is grether than tomorrow\";\r\n    } else {\r\n      return \"today is lower than tomorrow\";\r\n    }\r\n  };\r\n  return descriptor;\r\n}\r\n\r\nexport function Sticker(target: any) {\r\n  Object.defineProperty(target.prototype, \"name\", {\r\n    value: () => \"Hello decorator @Log\",\r\n  });\r\n  console.log(\"Decorador Sticker \", target);\r\n}\r\n\r\nexport function doSomething(name: string) {\r\n  console.log(`Hello ${name}`);\r\n}\r\n\r\nexport function loggingDecorator(wrapped: any) {\r\n  return () => {\r\n    console.log(\"Fruit\");\r\n    const result = wrapped.apply(arguments);\r\n    console.log(\"Fhinished\");\r\n    return result;\r\n  };\r\n}\r\n\r\nexport function CheckValidDataId() {\r\n  return function (target: any, key: string, descriptor: PropertyDescriptor) {\r\n    const originalMethod = descriptor.value;\r\n\r\n    descriptor.value = (id: number) => {\r\n      if (id < 1 || id > 80) {\r\n        return console.log(\r\n          \"%cError id debe ser entre 1 y 80 \",\r\n          \"color: red; display: block; width: 100%;\"\r\n        );\r\n      } else {\r\n        return originalMethod(id);\r\n      }\r\n    };\r\n  };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AbstractClassComponent } from './abstract-class.component';\n\n\n\n@NgModule({\n  declarations: [AbstractClassComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [AbstractClassComponent]\n})\nexport class AbstractClassModule { }\n","import { Injector } from \"@angular/core\";\r\nimport {\r\n  Animal\r\n} from './Animal';\r\n\r\nexport  abstract class AbsParent {\r\n  public readonly injector: Injector;\r\n\r\n  lastName: string;\r\n  constructor(\r\n     injector: Injector,\r\n\r\n\r\n  ) {\r\n\r\n  }\r\n\r\n  onHandleAbsParent(): void {\r\n    console.log(\"AbsParent\");\r\n  }\r\n\r\n  deleteRow( data: string ) {\r\n    console.log(\"data \", data);\r\n  }\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport const FOOD_API_TOKEN = new InjectionToken<string>(\"urlApi\");\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { CategoryListComponent } from \"./category/category-list/category-list.component\";\r\nimport { ParentChildRoutingModule } from \"./components/parent-child/parent-child-routing.module\";\r\nimport { PruebasTestingComponent } from \"./pruebas-testing/pruebas-testing.component\";\r\n\r\nconst routes: Routes = [\r\n  // {\r\n  //   path: \"\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/curso-rxjs/curso-rxjs.module\").then(\r\n  //       (m) => m.CursoRxjsModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"resolver-guard\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/resolver-guard/resolver-guard.module\").then(\r\n  //       (m) => m.ResolverGuardModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"observables\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/observables/observables.module\").then(\r\n  //       (m) => m.ObservablesModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"operador-pluck\",\r\n  //   loadChildren: () =>\r\n  //     import(\r\n  //       \"./components/curso-rxjs/operador-pluck/operador-pluck.module\"\r\n  //     ).then((m) => m.OperadorPluckModule),\r\n  // },\r\n  // {\r\n  //   path: \"ejercicio-rxjs\",\r\n  //   // loadChildren: () => import('./components/curso-rxjs/ejercicio-rxjs/ejercicio-rxjs.module').then( m => m.EjercicioRxjsModule )\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/curso-rxjs/curso-rxjs.module\").then(\r\n  //       (m) => m.CursoRxjsModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"decorator\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/creando-decoradors/creando-decoradors.module\").then(\r\n  //       (m) => m.CreandoDecoradorsModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"strategy-pattern\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/design-pattern/design-pattern.module\").then(\r\n  //       (m) => m.DesignPatternModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"view-child\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./view-child/view-child.module\").then((m) => m.ViewChildModule),\r\n  // },\r\n  // {\r\n  //   path: \"classes-course\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/classes-course/classes-course.module\").then(\r\n  //       (m) => m.ClassesCourseModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"utility-types\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/utility-types/utility-types.module\").then(\r\n  //       (m) => m.UtilityTypesModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"form-endpoint\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/form-endpoint/form-endpoint.module\").then(\r\n  //       (m) => m.FormEndpointModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"value-control-accessor\",\r\n  //   loadChildren: () =>\r\n  //     import(\r\n  //       \"./components/control-value-accessor/control-value-accessor.module\"\r\n  //     ).then((m) => m.ControlValueAccessorModule),\r\n  // },\r\n  // {\r\n  //   path: \"wiget-wrapper\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/design-patterns/home/home.module\").then(\r\n  //       (m) => m.HomeModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"dependency-injection\",\r\n  //   loadChildren: () =>\r\n  //     import(\r\n  //       \"./components/dependency-injection/dependency-injection.module\"\r\n  //     ).then((m) => m.DependencyInjectionModule),\r\n  // },\r\n  // {\r\n  //   path: \"composition\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/composition/composition.module\").then(\r\n  //       (m) => m.CompositionModule\r\n  //     ),\r\n  // },\r\n  // {\r\n  //   path: \"categories\",\r\n  //   component: CategoryListComponent,\r\n  // },\r\n  // {\r\n  //   path: \"testing-jasmine\",\r\n  //   component: PruebasTestingComponent,\r\n  // },\r\n  // {\r\n  //   path: \"directive-lifecycle\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./components/parent-child/parent-child.module\").then(\r\n  //       (m) => m.ParentChildModule\r\n  //     ),\r\n  // },\r\n  {\r\n    path: \"playground\",\r\n    loadChildren: () =>\r\n      import(\"./components/playground-index/playground-index.module\").then(\r\n        (m) => m.PlaygroundIndexModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"ultimate\",\r\n    loadChildren: () =>\r\n      import(\r\n        \"./components/ultimate-course-index/ultimate-course-index.module\"\r\n      ).then((m) => m.UltimateCourseIndexModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterModule } from '@angular/router';\nimport { DialogConfirmationComponent } from './dialog-confirmation/dialog-confirmation.component';\nimport { SpinnerComponent } from './spinner/spinner/spinner.component';\n\n\n@NgModule({\n  declarations: [HeaderComponent, DialogConfirmationComponent, SpinnerComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatIconModule,\n    MatToolbarModule,\n  ],\n  exports: [HeaderComponent, SpinnerComponent]\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CreandoDecoradorsRoutingModule } from './creando-decoradors-routing.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    CreandoDecoradorsRoutingModule\n  ]\n})\nexport class CreandoDecoradorsModule { }\n","\r\n\r\nexport class Item {\r\n   _codItem:                       number;\r\n    _desItem:                       string ;\r\n   _mcaHay:                        string ;\r\n   _pvp:                           string ;\r\n   _ordenAgrupacion:               number;\r\n   _codEstadoProductoPrescripcion: string ;\r\n   _numTiendas:                    number;\r\n\r\n  get codItem() {\r\n    return this._codItem\r\n  }\r\n\r\n  set codItem( desc ) {\r\n    this._codItem = desc;\r\n  }\r\n\r\n  get desItem() {\r\n    return this._desItem\r\n  }\r\n\r\n  set desItem( desc ) {\r\n    console.log('%cdesItem ', 'color: white; background-color: #007acc;', desc);\r\n    this._desItem = desc.toUpperCase();\r\n  }\r\n\r\n  get mcaHay() {\r\n    return this._mcaHay\r\n  }\r\n\r\n  set mcaHay( desc ) {\r\n    this._mcaHay = desc;\r\n  }\r\n\r\n  get pvp() {\r\n    return this._pvp\r\n  }\r\n\r\n  set pvp( desc ) {\r\n    this._pvp = desc;\r\n  }\r\n\r\n  get ordenAgrupacion() {\r\n    return this._ordenAgrupacion\r\n  }\r\n\r\n  set ordenAgrupacion( desc ) {\r\n    this._ordenAgrupacion = desc;\r\n  }\r\n\r\n  get codEstadoProductoPrescripcion() {\r\n    return this._codEstadoProductoPrescripcion;\r\n  }\r\n\r\n  set codEstadoProductoPrescripcion( desc ) {\r\n    this._codEstadoProductoPrescripcion = desc;\r\n  }\r\n  get numTiendas() {\r\n    return this._numTiendas\r\n  }\r\n\r\n  set numTiendas( desc ) {\r\n    this._numTiendas = desc;\r\n  }\r\n}\r\n\r\n\r\nexport class Agrupacion {\r\n  _codAgrupacion: number;\r\n  _desAgrupacion: string;\r\n  _item:          Item[];\r\n\r\n  get codAgrupacion() {\r\n    return this._codAgrupacion;\r\n  }\r\n\r\n  set codAgrupacion( d ) {\r\n    this._codAgrupacion = d;\r\n  }\r\n  get desAgrupacion() {\r\n    return this._desAgrupacion;\r\n  }\r\n\r\n  set desAgrupacion( d ) {\r\n    this._desAgrupacion = d;\r\n  }\r\n  get item() {\r\n    return this._item;\r\n  }\r\n\r\n  set item( d ) {\r\n    this._item = [];\r\n    if ( d.length ) {\r\n      d.forEach( ( r, i) => {\r\n        this._item.push(\r\n          Object.assign( new Item, r)\r\n        )\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class GrupoCompra {\r\n  _codGrupoCompra:        number;\r\n  _desGrupoCompra:        string;\r\n  _codEstadoPrescripcion: string;\r\n  _agrupacion:            Agrupacion[];\r\n\r\n  get codGrupoCompra() {\r\n    return this._codGrupoCompra;\r\n  }\r\n  set codGrupoCompra( d ) {\r\n    this._codGrupoCompra = d;\r\n  }\r\n  get desGrupoCompra() {\r\n    return this._desGrupoCompra;\r\n  }\r\n  set desGrupoCompra( d ) {\r\n    this._desGrupoCompra = d;\r\n  }\r\n  get codEstadoPrescripcion() {\r\n    return this._codEstadoPrescripcion;\r\n  }\r\n  set codEstadoPrescripcion( d ) {\r\n    this._codEstadoPrescripcion = d;\r\n  }\r\n  get agrupacion() {\r\n    return this._agrupacion;\r\n  }\r\n  set agrupacion( d ) {\r\n    this._agrupacion = [];\r\n    d.forEach(i => {\r\n      this._agrupacion.push(\r\n        Object.assign( new Agrupacion, i )\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport class PrescipcionCompra {\r\n  _fecServicio: string;\r\n  _grupoCompra: GrupoCompra[];\r\n\r\n  get fecServicio() {\r\n    return this._fecServicio;\r\n  }\r\n  set fecServicio( f ) {\r\n    this._fecServicio = f;\r\n  }\r\n\r\n  get grupoCompra() {\r\n    return this._grupoCompra;\r\n  }\r\n\r\n  set grupoCompra( gc: GrupoCompra[] ) {\r\n    this._grupoCompra = [];\r\n    gc.forEach( (pres: any, index) => {\r\n      this._grupoCompra.push(\r\n        Object.assign( new GrupoCompra, pres )\r\n      );\r\n\r\n        // if ( this._grupoCompra[index].agrupacion.length ) {\r\n        //   this._grupoCompra[index].agrupacion = this._grupoCompra[index].agrupacion;\r\n\r\n        //   if ( this._grupoCompra[index].agrupacion[index].item.length ) {\r\n        //     this._grupoCompra[index].agrupacion[index].item = this._grupoCompra[index].agrupacion[index].item;\r\n        //   }\r\n        // }\r\n\r\n    });\r\n    console.log('%cgrupo compra ', 'color: white; background-color: #007acc;', this._grupoCompra);\r\n  }\r\n}\r\n","import { WrappedNodeExpr } from \"@angular/compiler\";\nimport { ArgumentType } from \"@angular/compiler/src/core\";\nimport { Component, OnInit } from \"@angular/core\";\nimport {\n  Emoji,\n  Log,\n  Sticker,\n  doSomething,\n  loggingDecorator,\n  CheckValidDataId,\n} from \"./decorators/decorators\";\n\n@Component({\n  selector: \"app-creando-decoradors\",\n  templateUrl: \"./creando-decoradors.component.html\",\n  styleUrls: [\"./creando-decoradors.component.css\"],\n})\n@Sticker\nexport class CreandoDecoradorsComponent implements OnInit {\n  @Emoji()\n  flavor = \"vainilla\";\n  empCategory: \"Manager\" | \"Non-Manager\" = \"Manager\";\n  constructor() {\n    this.empCategory = \"Non-Manager\";\n    // console.log(\"ver el decorador Sticker \", this[\"name\"]())\n    console.log(\"resultado es: \", this.aSimpleMethod(new Date()));\n  }\n  ngOnInit(): void {\n    this.saveDataToDB(0);\n    setTimeout(() => {\n      this.flavor = \"chocolate\";\n      console.log(\"flavor \", this.flavor);\n    }, 2000);\n  }\n\n  @Log\n  aSimpleMethod(validation: any): string {\n    if (validation) {\n      return validation;\n    } else {\n      return validation;\n    }\n  }\n\n  @CheckValidDataId()\n  saveDataToDB(id: number) {\n    console.log(`Data saved wint id ${id}`);\n  }\n}\n","<p>creando-decoradors works!</p>\n<p>Decoradores es una función que espande la funcionalidad a un objeto</p>\n<h4>\n  Working with decorators <span>{{ flavor }}</span>\n</h4>\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { MyConfigService, APP_NAME } from \"./my-config.service\";\n\n@NgModule({\n  providers: [],\n})\nexport class MyConfigServiceModule {\n  static forRoot(appName: string): ModuleWithProviders<any> {\n    return {\n      ngModule: MyConfigServiceModule,\n      providers: [{ provide: APP_NAME, useValue: appName }, MyConfigService],\n    };\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}