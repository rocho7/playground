{"version":3,"sources":["./src/app/services/resolvers/resolver.service.ts","./src/app/components/resolver-guard/resolver-guard.component.ts","./src/app/components/resolver-guard/resolver-guard.component.html","./src/app/components/resolver-guard/resolver-guard.module.ts","./src/app/components/resolver-guard/resolver-guard-routing.module.ts","./src/app/components/resolver-guard/guards/permissions.guard.ts","./src/app/components/resolver-guard/guards/without-save.guard.ts"],"names":[],"mappings":"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","file":"resolver-guard-resolver-guard-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { IUser } from 'src/app/components/resolver-guard/interface/user.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResolverService implements Resolve<any>{\n\n  jsonPlaceholderApi: string;\n  usersEndpoint: string;\n\n  constructor(\n    private readonly http: HttpClient\n  ) {\n    this.jsonPlaceholderApi = 'https://jsonplaceholder.typicode.com/';\n    this.usersEndpoint = 'users';\n  }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.http.get<IUser[]>(`${this.jsonPlaceholderApi}${this.usersEndpoint}`);\n  }\n\n  getUsers() {\n    // return this.http.get(`${this.jsonPlaceholderApi}${this.usersEndpoint}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IUser } from './interface/user.interface';\n\n@Component({\n  selector: 'app-resolver-guard',\n  templateUrl: './resolver-guard.component.html',\n  styleUrls: ['./resolver-guard.component.css']\n})\nexport class ResolverGuardComponent implements OnInit {\n\n  users: IUser[];\n  userSelected: IUser;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.users = this.route.snapshot.data['userParam'];\n    this.userSelected = Object.create({});\n  }\n\n  selectedUser(user: any): void {\n    console.log('%cresolver ', 'color: white; background-color: #007acc;', user );\n    this.userSelected = this.users.filter( (u: IUser) => u.id === Number(user.target.value) )[0];\n  }\n\n  save(): void {\n    const jsonPlaceholderApi = 'https://jsonplaceholder.typicode.com/';\n    const usersEndpoint = 'users';\n     this.http.post<IUser>(`${jsonPlaceholderApi}${usersEndpoint}`, this.userSelected).subscribe();\n\n  }\n\n}\n","<p>resolver-guard works!</p>\n<h1>Ejemplos con RESOLVE, CANACTIVATE, CANDEACTIVATE</h1>\n<div class=\"row\">\n  <div class=\"col-6\">\n    <h4>Resolve</h4>\n    <ng-container *ngIf=\"users\">\n      <select (change)=\"selectedUser($event)\">\n        <option *ngFor=\"let user of ( users )\" [value]=\"user.id\">{{ user.name }} -- {{ user.username }}</option>\n      </select>\n      <button type=\"submit\" (click)=\"save()\">Save user</button>\n    </ng-container>\n  </div>\n  <div class=\"col-6\">\n    <h4>Guard</h4>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResolverGuardComponent } from './resolver-guard.component';\nimport { ResolverGuardRoutingModule } from './resolver-guard-routing.module';\nimport { CoreModule } from 'src/app/core/core.module';\n\n\n\n@NgModule({\n  declarations: [ResolverGuardComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    ResolverGuardRoutingModule\n  ]\n})\nexport class ResolverGuardModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ResolverService } from 'src/app/services/resolvers/resolver.service';\r\nimport { PermissionsGuard } from './guards/permissions.guard';\r\nimport { WithoutSaveGuard } from './guards/without-save.guard';\r\nimport { ResolverGuardComponent } from './resolver-guard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ResolverGuardComponent,\r\n    resolve: { userParam: ResolverService },\r\n    canActivate: [PermissionsGuard],\r\n    canDeactivate: [WithoutSaveGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ResolverGuardRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionsGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if ( this.hasPermissions() ) {\n        return true;\n      }\n      return false;\n  }\n\n  hasPermissions(): boolean {\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WithoutSaveGuard implements CanDeactivate<unknown> {\n  canDeactivate(\n    component: unknown,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if ( this.hasPermissions() ) {\n        return true;\n      }\n    return confirm('You have unsaved changes!! Do you really want to leave?')\n  }\n\n  hasPermissions(): boolean {\n    return false;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}