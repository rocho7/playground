{"version":3,"sources":["./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/food-store/config.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/dependency-injection-zone-wrapper.module.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/dependency-injection-zone-wrapper-routing.module.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/containers/food-viewer/food-viewer.component.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/containers/food-viewer/food-viewer.component.html","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/containers/drinks-viewer/drinks-viewer.component.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/containers/drinks-viewer/drinks-viewer.component.html","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/food-store/food-store.service.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/food.service.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/food-store/food-store.module.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/dependency-injection-zone-wrapper.component.ts","./src/app/components/ultimate-course-index/angular-pro/dependencyInjectionZone/dependency-injection-zone-wrapper/dependency-injection-zone-wrapper.component.html"],"names":[],"mappings":"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","file":"dependencyInjectionZone-dependency-injection-zone-wrapper-dependency-injection-zone-wrapper-module.js","sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface FoodStoreConfig {\r\n  storeId: number;\r\n  storeToken: string;\r\n}\r\n\r\nexport const FOOD_STORE_CONFIG = new InjectionToken<FoodStoreConfig>(\r\n  \"FOOD_STORE_CONFIG\"\r\n);\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { DependencyInjectionZoneWrapperRoutingModule } from \"./dependency-injection-zone-wrapper-routing.module\";\nimport { FoodViewerComponent } from \"./containers/food-viewer/food-viewer.component\";\nimport { DependencyInjectionZoneWrapperComponent } from \"./dependency-injection-zone-wrapper.component\";\nimport { DrinksViewerComponent } from \"./containers/drinks-viewer/drinks-viewer.component\";\nimport { FoodStoreModule } from \"../food-store/food-store.module\";\n\n@NgModule({\n  declarations: [\n    DependencyInjectionZoneWrapperComponent,\n    FoodViewerComponent,\n    DrinksViewerComponent,\n  ],\n  imports: [\n    CommonModule,\n    FoodStoreModule.forRoot({\n      storeId: 10292,\n      storeToken: \"123abc\",\n    }),\n    DependencyInjectionZoneWrapperRoutingModule,\n  ],\n  // providers: [\n  //   {\n  //     provide: \"foodApiPath\",\n  //     useValue:\n  //       \"/assets/ultimate-course/angular-pro/dependency-injection/food.json\",\n  //   },\n  // ],\n})\nexport class DependencyInjectionZoneWrapperModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DependencyInjectionZoneWrapperComponent } from \"./dependency-injection-zone-wrapper.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: DependencyInjectionZoneWrapperComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DependencyInjectionZoneWrapperRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { FoodService } from \"../../food.service\";\n\nabstract class PizzaService {\n  getFood: () => any;\n}\n\n@Component({\n  selector: \"app-food-viewer\",\n  templateUrl: \"./food-viewer.component.html\",\n  styleUrls: [\"./food-viewer.component.css\"],\n  providers: [\n    {\n      provide: PizzaService,\n      useExisting: FoodService,\n    },\n  ],\n})\nexport class FoodViewerComponent implements OnInit {\n  items: Observable<any>;\n\n  constructor(private readonly foodService: PizzaService) {}\n\n  ngOnInit(): void {\n    this.items = this.foodService.getFood();\n  }\n}\n","<p>food-viewer works!</p>\n\n<div *ngFor=\"let item of (items | async)?.food\">\n  {{ item?.name }} {{ item?.price | currency : \"USD\" }}\n  {{ item?.location }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { FoodService } from \"../../food.service\";\n\nabstract class DrinkService {\n  getDrinks: () => any;\n}\n\n@Component({\n  selector: \"app-drinks-viewer\",\n  templateUrl: \"./drinks-viewer.component.html\",\n  styleUrls: [\"./drinks-viewer.component.css\"],\n  providers: [\n    {\n      provide: DrinkService,\n      useExisting: FoodService,\n    },\n  ],\n})\nexport class DrinksViewerComponent implements OnInit {\n  items: Observable<any>;\n  constructor(private readonly foodService: DrinkService) {}\n\n  ngOnInit(): void {\n    this.items = this.foodService.getDrinks();\n    //   .subscribe((res: any) => (this.items = res?.drinks));\n    // console.log(\n    //   \"%cthis.items \",\n    //   \"color: red; display: block; width: 100%;\",\n    //   this.items\n    // );\n  }\n}\n","<p>drinks-viewer works!</p>\n<div *ngFor=\"let item of (items | async)?.drinks\">\n  {{ item?.name }} {{ item?.price | currency : \"USD\" }}\n  {{ item?.location }}\n</div>\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { map } from \"rxjs/operators\";\nimport { FoodStoreConfig, FOOD_STORE_CONFIG } from \"./config\";\n\ninterface IStore {\n  storeId: number;\n  storeToken: string;\n  location: string;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FoodStoreService {\n  constructor(\n    private readonly http: HttpClient,\n    @Inject(FOOD_STORE_CONFIG) private config: FoodStoreConfig\n  ) {}\n\n  async getStore() {\n    console.log(\n      \"%ccheck configuration \",\n      \"color: red; display: block; width: 100%;\",\n      this.config?.storeId,\n      this.config?.storeToken\n    );\n    const url =\n      \"/assets/ultimate-course/angular-pro/dependency-injection/store.json\";\n    const response = await this.http\n      .get<IStore[]>(url)\n      .pipe(\n        map((res: IStore[]) => {\n          return res.filter(\n            (it: IStore) => it?.storeId === this.config?.storeId\n          );\n        })\n      )\n      .toPromise();\n    return response;\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { FOOD_API_TOKEN } from \"./token\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FoodService {\n  constructor(\n    private readonly http: HttpClient,\n    @Inject(FOOD_API_TOKEN) private foodApiPath: string\n  ) {}\n\n  getFood() {\n    return this.http.get(`${this.foodApiPath}food.json`);\n  }\n  getDrinks() {\n    return this.http.get(`${this.foodApiPath}drinks.json`);\n  }\n  getSides() {\n    return this.http.get(`${this.foodApiPath}sides.json`);\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FOOD_STORE_CONFIG } from \"./config\";\nimport { FoodStoreService } from \"./food-store.service\";\n\nexport const FOOD_PROVIDERS: Provider[] = [FoodStoreService];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class FoodStoreModule {\n  static forRoot(config: FoodStoreModule): ModuleWithProviders<any> {\n    return {\n      ngModule: FoodStoreModule,\n      providers: [\n        FOOD_PROVIDERS,\n        {\n          provide: FOOD_STORE_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FoodStoreService } from \"../food-store/food-store.service\";\n\n@Component({\n  selector: \"app-dependency-injection-zone-wrapper\",\n  templateUrl: \"./dependency-injection-zone-wrapper.component.html\",\n  styleUrls: [\"./dependency-injection-zone-wrapper.component.css\"],\n})\nexport class DependencyInjectionZoneWrapperComponent implements OnInit {\n  store: any;\n  constructor(private readonly foodService: FoodStoreService) {}\n\n  ngOnInit(): void {\n    this.foodService.getStore().then((res) => {\n      this.store = res[0];\n    });\n  }\n}\n","<p>dependency-injection-zone-wrapper works!</p>\n<div class=\"row\">\n  <div class=\"col-6\">\n    <h3>Using useExisting</h3>\n    <app-food-viewer></app-food-viewer>\n    <app-drinks-viewer></app-drinks-viewer>\n  </div>\n  <div class=\"col-6\">\n    <h3>Configuration NgModules</h3>\n    Food Store {{ store?.storeId }}, location ({{ store?.location }})\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}