{"version":3,"sources":["./src/app/services/obs.service.ts","./node_modules/rxjs/_esm2015/internal/observable/dom/ajax.js","./src/app/components/playground-index/playground-index.component.ts","./src/app/components/playground-index/playground-index.component.html","./node_modules/rxjs/_esm2015/internal/observable/dom/AjaxObservable.js","./src/app/pruebas-testing/pruebas-testing.component.ts","./src/app/pruebas-testing/pruebas-testing.component.html","./src/app/components/playground-index/playground-index.module.ts","./src/app/components/playground-index/playground-index-routing.module.ts","./node_modules/rxjs/_esm2015/ajax/index.js","./node_modules/rxjs/_esm2015/internal/util/root.js"],"names":[],"mappings":"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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACO;AACA;AACJ;AAC1C;AACA,QAAQ,+CAAI;AACZ,mBAAmB,+CAAI;AACvB;AACA,eAAe,+CAAI;AACnB,mBAAmB,+CAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAI;AACZ,mBAAmB,+CAAI;AACvB;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA,4BAA4B,+CAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACO;AACP,+BAA+B,8BAA8B;AAC7D;AACO;AACP,+BAA+B,qCAAqC;AACpE;AACO;AACP,+BAA+B,iCAAiC;AAChE;AACO;AACP,+BAA+B,oCAAoC;AACnE;AACO;AACP,+BAA+B,sCAAsC;AACrE;AACA,oBAAoB,0DAAG;AAChB;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO,6BAA6B,sDAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM,6BAA6B,sDAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+CAAI,qCAAqC,+CAAI;AACjF,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB,oDAAoD,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+CAAI,6BAA6B,+CAAI;AACtD;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,wBAAwB,GAAG,8BAA8B;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA,oBAAoB,+CAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0CAA0C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0C;;;;;;;;;;;;ACtWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACO;AAEf;;;;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","file":"components-playground-index-playground-index-module.js","sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { ajax } from \"rxjs/ajax\";\nimport { IUser } from \"../components/resolver-guard/interface/user.interface\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ObsService {\n  name$ = new BehaviorSubject<string>(\"\");\n  subject$ = new Subject<number>();\n  dataFromUrl$ = new Subject<any>();\n\n  constructor(public http: HttpClient) {}\n\n  public getGithub(url: string): any {\n    const gh = ajax.getJSON(\n      \"https://jsonplaceholder.typicode.com/photos/\" + url\n    );\n\n    const data$ = new Observable((observer) => {\n      gh.subscribe(\n        (result) => {\n          observer.next(result);\n          observer.complete();\n        },\n        (err) => {\n          observer.error(err);\n        }\n      );\n    });\n    return data$;\n  }\n\n  getResult(id: number) {\n    return this.http.get(\"https://jsonplaceholder.typicode.com/photos/\" + id);\n  }\n\n  getResults() {\n    return this.http.get<any[]>(\"https://jsonplaceholder.typicode.com/photos\");\n  }\n  getResultsWithRxjs() {\n    this.http\n      .get(\"https://jsonplaceholder.typicode.com/photos\")\n      .subscribe((result) => {\n        this.dataFromUrl$.next(result);\n      });\n  }\n\n  setData(data: string) {\n    this.name$.next(data);\n    this.subject$.next(1);\n    this.subject$.next(2);\n  }\n\n  save(payload: any): Observable<any> {\n    const headers: HttpHeaders = new HttpHeaders({\n      \"content-type\": \"application/json\",\n      \"access-control-allow-origin\": \"*\",\n      vary: \"Accept-Encoding\",\n    });\n    let options = { headers: headers };\n    // https://beeceptor.com/console/testingservice\n    // const beeceptorApi = 'https://testingservice.free.beeceptor.com/';\n    // const postEndpoint = 'post';\n    const mockApi = \"https://63525dd8a9f3f34c373bb1ce.mockapi.io/api/\";\n    const postEndpoint = \"users\";\n    return this.http.post<any>(`${mockApi}${postEndpoint}`, payload, options);\n  }\n\n  remove() {}\n}\n","import { AjaxObservable } from './AjaxObservable';\nexport const ajax = (() => AjaxObservable.create)();\n//# sourceMappingURL=ajax.js.map","import { Component } from \"@angular/core\";\nimport { MyConfigService } from \"../my-config-service/my-config.service\";\n\n@Component({\n  selector: \"app-playground-index\",\n  templateUrl: \"./playground-index.component.html\",\n  styleUrls: [\"./playground-index.component.css\"],\n})\nexport class PlaygroundIndexComponent {\n  title = \"rxjs\";\n  public appName: string = \"\";\n\n  constructor(private myConfigService: MyConfigService) {\n    this.appName = this.myConfigService.getAppName();\n    console.log(\n      \"%cEjemplo de injection Token \",\n      \"color: red; display: block; width: 100%;\",\n      this.appName\n    );\n  }\n}\n","<p>playground-index works!</p>\n\n\n\n<!-- SPINNER  -->\n<!-- <app-spinner></app-spinner> -->\n\n\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse dark\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" [routerLink]=\"['/']\">Home<span >(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"resolver-guard\">resolver-guard</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"observables\">Observables</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"operador-pluck\">operador-pluck</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"ejercicio-rxjs\">Ejercicios RXJS</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"decorator\">creando decorator</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"strategy-pattern\">Strategy pattern</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"classes-course\">Classes Extends</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"view-child\">view-child</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"utility-types\">Utility types de TypeScrpit</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"form-endpoint\">Swagger prueba</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"value-control-accessor\">Example value control accessor</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"wiget-wrapper\">Design pattern widget</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"dependency-injection\">Dependency injection</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"composition\">Composition</a>\n      </li>\n      <li class=\"nav-item drop-down\">\n        <a class=\"nav-link\" routerLink=\"testing-jasmine\">Testing Jasmine</a>\n      </li>\n      <li class=\"nav-item drop-down\">\n        <a class=\"nav-link\" routerLink=\"directive-lifecycle\">Directives - lifecycle</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n<h1>Welcome to testing!</h1>\n<h3>PRUEBA CON FORROOT. NOMBRE ES: {{ appName }}</h3>\n","import { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        let progId;\n        try {\n            const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (let i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers = null) {\n    return new AjaxObservable({ method: 'GET', url, headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url, body, headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url, headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url, body, headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url, body, headers });\n}\nconst mapResponse = map((x, index) => x.response);\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url,\n        responseType: 'json',\n        headers\n    }));\n}\nexport class AjaxObservable extends Observable {\n    constructor(urlOrRequest) {\n        super();\n        const request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (const prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    _subscribe(subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    }\n}\nAjaxObservable.create = (() => {\n    const create = (urlOrRequest) => {\n        return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\nexport class AjaxSubscriber extends Subscriber {\n    constructor(destination, request) {\n        super(destination);\n        this.request = request;\n        this.done = false;\n        const headers = request.headers = request.headers || {};\n        if (!request.crossDomain && !this.getHeader(headers, 'X-Requested-With')) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        let contentTypeHeader = this.getHeader(headers, 'Content-Type');\n        if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        request.body = this.serializeBody(request.body, this.getHeader(request.headers, 'Content-Type'));\n        this.send();\n    }\n    next(e) {\n        this.done = true;\n        const { xhr, request, destination } = this;\n        let result;\n        try {\n            result = new AjaxResponse(e, xhr, request);\n        }\n        catch (err) {\n            return destination.error(err);\n        }\n        destination.next(result);\n    }\n    send() {\n        const { request, request: { user, method, url, async, password, headers, body } } = this;\n        try {\n            const xhr = this.xhr = request.createXHR();\n            this.setupEvents(xhr, request);\n            if (user) {\n                xhr.open(method, url, async, user, password);\n            }\n            else {\n                xhr.open(method, url, async);\n            }\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            this.setHeaders(xhr, headers);\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        catch (err) {\n            this.error(err);\n        }\n    }\n    serializeBody(body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            const splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    }\n    setHeaders(xhr, headers) {\n        for (let key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    }\n    getHeader(headers, headerName) {\n        for (let key in headers) {\n            if (key.toLowerCase() === headerName.toLowerCase()) {\n                return headers[key];\n            }\n        }\n        return undefined;\n    }\n    setupEvents(xhr, request) {\n        const progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            const { subscriber, progressSubscriber, request } = xhrTimeout;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            let error;\n            try {\n                error = new AjaxTimeoutError(this, request);\n            }\n            catch (err) {\n                error = err;\n            }\n            subscriber.error(error);\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                let xhrProgress;\n                xhrProgress = function (e) {\n                    const { progressSubscriber } = xhrProgress;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress;\n                }\n                xhrProgress.progressSubscriber = progressSubscriber;\n            }\n            let xhrError;\n            xhrError = function (e) {\n                const { progressSubscriber, subscriber, request } = xhrError;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                let error;\n                try {\n                    error = new AjaxError('ajax error', this, request);\n                }\n                catch (err) {\n                    error = err;\n                }\n                subscriber.error(error);\n            };\n            xhr.onerror = xhrError;\n            xhrError.request = request;\n            xhrError.subscriber = this;\n            xhrError.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            return;\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n        function xhrLoad(e) {\n            const { subscriber, progressSubscriber, request } = xhrLoad;\n            if (this.readyState === 4) {\n                let status = this.status === 1223 ? 204 : this.status;\n                let response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (status < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    let error;\n                    try {\n                        error = new AjaxError('ajax error ' + status, this, request);\n                    }\n                    catch (err) {\n                        error = err;\n                    }\n                    subscriber.error(error);\n                }\n            }\n        }\n        xhr.onload = xhrLoad;\n        xhrLoad.subscriber = this;\n        xhrLoad.progressSubscriber = progressSubscriber;\n        xhrLoad.request = request;\n    }\n    unsubscribe() {\n        const { done, xhr } = this;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        super.unsubscribe();\n    }\n}\nexport class AjaxResponse {\n    constructor(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n}\nconst AjaxErrorImpl = (() => {\n    function AjaxErrorImpl(message, xhr, request) {\n        Error.call(this);\n        this.message = message;\n        this.name = 'AjaxError';\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n        return this;\n    }\n    AjaxErrorImpl.prototype = Object.create(Error.prototype);\n    return AjaxErrorImpl;\n})();\nexport const AjaxError = AjaxErrorImpl;\nfunction parseJson(xhr) {\n    if ('response' in xhr) {\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n    }\n    else {\n        return JSON.parse(xhr.responseText || 'null');\n    }\n}\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            return parseJson(xhr);\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n}\nexport const AjaxTimeoutError = AjaxTimeoutErrorImpl;\n//# sourceMappingURL=AjaxObservable.js.map","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Item } from \"../components/classes-course/class/prescripcion-compra.class\";\nimport { ObsService } from \"../services/obs.service\";\n\n@Component({\n  selector: \"app-pruebas-testing\",\n  templateUrl: \"./pruebas-testing.component.html\",\n  styleUrls: [\"./pruebas-testing.component.css\"],\n})\nexport class PruebasTestingComponent implements OnInit {\n  @ViewChild(\"result\") result: any;\n  title = \"ng-jasmine\";\n  form: FormGroup;\n  isCheck: any;\n  response: any;\n  photosAmount: any[] = [];\n  totalPhotosPrice: number;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly obsService: ObsService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      email: this.fb.control(\"prueba@email.com\", [Validators.required]),\n      password: this.fb.control(\"123\", [Validators.required]),\n    });\n    this.totalPhotosPrice = 0;\n    this.getPhotos();\n  }\n\n  add(num1: number, num2: number): number {\n    return Number(num1) + Number(num2);\n  }\n\n  printAdd(num1: any, num2: any): void {\n    this.result.nativeElement.value = this.add(num1, num2);\n  }\n\n  submit(form: FormGroup): void {\n    this.isCheck = { user: 1 };\n    this.obsService.save(form.value).subscribe((res) => {\n      this.response = res;\n    });\n  }\n\n  getPhotos(): void {\n    const photos = this.obsService.getResults();\n    photos.subscribe((items) => {\n      items.forEach((it, index) => {\n        if (index < 5) {\n          this.photosAmount.push({\n            ...it,\n            price: 10,\n            amount: index * 10,\n          });\n        }\n      });\n      this.getTotalPhotosPrice(this.photosAmount);\n    });\n  }\n\n  getTotalPhotosPrice(photosAmount: any[]): number {\n    let total = 0;\n    photosAmount.forEach((it) => {\n      total = it.amount;\n    });\n    return total;\n  }\n\n  onInputChange(action: string, photo: any): void {\n    const amount = action === \"plus\" ? photo.amount + 1 : photo.amount - 1;\n    photo.amount = Number(amount);\n    // const photos = this.obsService.getResults();\n    this.obsService.getResults();\n    this.totalPhotosPrice = this.getTotalPhotosPrice(this.photosAmount);\n  }\n\n  public onClearPhotos(): void {\n    if (this.photosAmount && this.photosAmount.length > 0) {\n      this.clearListCartPhotos();\n    }\n  }\n\n  private clearListCartPhotos(): void {\n    console.log(\n      \"%cclearListCartPhotos llamadado desde el SPEC \",\n      \"color: red; display: block; width: 100%;\"\n    );\n    this.photosAmount = [];\n    this.obsService.remove();\n  }\n}\n","<h1>pruebas-testing works!</h1>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div>\n          <h2 id=\"title\">Angular SumApp</h2>\n\n          <p id=\"description\">Esta (app) suma</p>\n\n          <span>Número 1:</span><input type=\"number\" #num1 id=\"num1\">\n          <span>Número 2:</span><input type=\"number\" #num2 id=\"num2\">\n\n          <br><br><br>\n\n          <button (click)=\"printAdd(num1.value, num2.value)\" #calc id=\"calc\">Sumar!</button>\n\n\n          <br><br><br>\n\n          Resultado: <input type=\"text\" #result id=\"result\">\n      </div>\n\n      <a href=\"https://www.youtube.com/watch?v=BMomngKK6bA&t=40s\">Pruebas unitarias</a><br>\n      <a href=\"https://www.youtube.com/watch?v=KsmXSJcfasU\">Pruebas unitarias servicios</a><br>\n      <a href=\"https://beeceptor.com/console/testingservice\">Consola para generar apis</a><br>\n      <a href=\"https://mockapi.io/projects/63525dd8a9f3f34c373bb1cf\">Consola MOCK API generar apis</a>\n      <h4>Generar reporte de cobertura comando: npm run test-coverage</h4>\n      <p>Para ver el reporte de cobertura file:///C:/playground/rxjs/coverage/rxjs/index.html</p>\n      <div>\n        <form [formGroup]=\"form\" (ngSubmit)=\"submit(form)\">\n          <input type=\"email\" name=\"email\" id=\"email\" formControlName=\"email\">\n          <br>\n          <input type=\"password\" name=\"password\" id=\"password\" formControlName=\"password\">\n          <button type=\"submit\" class=\"btn\">Send</button>\n        </form>\n        <div *ngIf=\"response\">\n          Respuesta desde Mock api {{ response | json }}\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-6\">\n      <h3>CURSO UDEMY</h3>\n      <a href=\"https://capgemini.udemy.com/course/angular-jasmine-karma/learn/lecture/24795202#overview\" target=\"_blank\" rel=\"noopener noreferrer\">Jasmine course</a>\n      <br>\n      Que es la cobertura:\n      mide el grado en que el código fuente de un programa ha sido probado.\n      Karma:\n      Es una herramienta que nos prermite ejecutar en los navegadores pruebas Jasmine desde la línea de comandos.\n      <div *ngFor=\"let item of photosAmount\">\n        <label [for]=\"item.id\">{{item.titel}}</label>\n        <div (click)=\"onInputChange('minus', item)\">\n          <i class=\"fas fa-minus\">-</i>\n        </div>\n        <span>{{item.amount}}</span>\n        <div (click)=\"onInputChange('plus', item)\">\n          <i class=\"fas fa-plus\">+</i>\n        </div>\n        <div>\n          {{item.price}}€  = {{item.amount * item.price}}€\n        </div>\n\n      </div>\n      <button (click)=\"onClearPhotos()\">Delete all</button>\n    </div>\n  </div>\n</div>\n\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { PlaygroundIndexRoutingModule } from \"./playground-index-routing.module\";\nimport { PlaygroundIndexComponent } from \"./playground-index.component\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { SpinnerInterceptorInterceptor } from \"src/app/core/interceptors/spinner-interceptor.interceptor\";\n\n@NgModule({\n  declarations: [PlaygroundIndexComponent],\n  imports: [CommonModule, PlaygroundIndexRoutingModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: SpinnerInterceptorInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class PlaygroundIndexModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CategoryListComponent } from \"src/app/category/category-list/category-list.component\";\nimport { PruebasTestingComponent } from \"src/app/pruebas-testing/pruebas-testing.component\";\nimport { PlaygroundIndexComponent } from \"./playground-index.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: PlaygroundIndexComponent,\n  },\n  {\n    path: \"\",\n    loadChildren: () =>\n      import(\"../curso-rxjs/curso-rxjs.module\").then((m) => m.CursoRxjsModule),\n  },\n  {\n    path: \"resolver-guard\",\n    loadChildren: () =>\n      import(\"../resolver-guard/resolver-guard.module\").then(\n        (m) => m.ResolverGuardModule\n      ),\n  },\n  {\n    path: \"observables\",\n    loadChildren: () =>\n      import(\"../observables/observables.module\").then(\n        (m) => m.ObservablesModule\n      ),\n  },\n  {\n    path: \"operador-pluck\",\n    loadChildren: () =>\n      import(\"../curso-rxjs/operador-pluck/operador-pluck.module\").then(\n        (m) => m.OperadorPluckModule\n      ),\n  },\n  {\n    path: \"ejercicio-rxjs\",\n    // loadChildren: () => import('../curso-rxjs/ejercicio-rxjs/ejercicio-rxjs.module').then( m => m.EjercicioRxjsModule )\n    loadChildren: () =>\n      import(\"../curso-rxjs/curso-rxjs.module\").then((m) => m.CursoRxjsModule),\n  },\n  {\n    path: \"decorator\",\n    loadChildren: () =>\n      import(\"../creando-decoradors/creando-decoradors.module\").then(\n        (m) => m.CreandoDecoradorsModule\n      ),\n  },\n  {\n    path: \"strategy-pattern\",\n    loadChildren: () =>\n      import(\"../design-pattern/design-pattern.module\").then(\n        (m) => m.DesignPatternModule\n      ),\n  },\n  {\n    path: \"view-child\",\n    loadChildren: () =>\n      import(\"../../view-child/view-child.module\").then(\n        (m) => m.ViewChildModule\n      ),\n  },\n  {\n    path: \"classes-course\",\n    loadChildren: () =>\n      import(\"../classes-course/classes-course.module\").then(\n        (m) => m.ClassesCourseModule\n      ),\n  },\n  {\n    path: \"utility-types\",\n    loadChildren: () =>\n      import(\"../utility-types/utility-types.module\").then(\n        (m) => m.UtilityTypesModule\n      ),\n  },\n  {\n    path: \"form-endpoint\",\n    loadChildren: () =>\n      import(\"../form-endpoint/form-endpoint.module\").then(\n        (m) => m.FormEndpointModule\n      ),\n  },\n  {\n    path: \"value-control-accessor\",\n    loadChildren: () =>\n      import(\"../control-value-accessor/control-value-accessor.module\").then(\n        (m) => m.ControlValueAccessorModule\n      ),\n  },\n  {\n    path: \"wiget-wrapper\",\n    loadChildren: () =>\n      import(\"../design-patterns/home/home.module\").then((m) => m.HomeModule),\n  },\n  {\n    path: \"dependency-injection\",\n    loadChildren: () =>\n      import(\"../dependency-injection/dependency-injection.module\").then(\n        (m) => m.DependencyInjectionModule\n      ),\n  },\n  {\n    path: \"composition\",\n    loadChildren: () =>\n      import(\"../composition/composition.module\").then(\n        (m) => m.CompositionModule\n      ),\n  },\n  {\n    path: \"categories\",\n    component: CategoryListComponent,\n  },\n  {\n    path: \"testing-jasmine\",\n    component: PruebasTestingComponent,\n  },\n  {\n    path: \"directive-lifecycle\",\n    loadChildren: () =>\n      import(\"../parent-child/parent-child.module\").then(\n        (m) => m.ParentChildModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlaygroundIndexRoutingModule {}\n","export { ajax } from '../internal/observable/dom/ajax';\nexport { AjaxResponse, AjaxError, AjaxTimeoutError } from '../internal/observable/dom/AjaxObservable';\n//# sourceMappingURL=index.js.map","const __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root = __window || __global || __self;\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n//# sourceMappingURL=root.js.map"],"sourceRoot":"webpack:///"}